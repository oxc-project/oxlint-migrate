import { writeFile } from 'node:fs/promises';
import path from 'node:path';
import type { Rule } from './traverse-rules.js';

export type ResultMap = Map<string, string[]>;

export class RulesGenerator {
  private rulesArray: Rule[];
  constructor(rulesArray: Rule[] = []) {
    this.rulesArray = rulesArray;
  }

  public generateRulesCode() {
    console.log(`Generating rules`);

    const rulesArray = this.rulesArray;
    let code =
      '// These rules are automatically generated by scripts/generator.ts\n\n';

    code += 'const rules = [\n';
    code += rulesArray
      .map((rule) => {
        return `  '${rule.value.replaceAll('_', '-')}'`;
      })
      .join(',\n');
    code += '\n]\n\n';

    code += 'export default rules;\n';

    return code;
  }

  public generateRules(folderPath: string): Promise<void> {
    const output = this.generateRulesCode();

    return writeFile(path.resolve(folderPath, `rules.ts`), output);
  }
}
