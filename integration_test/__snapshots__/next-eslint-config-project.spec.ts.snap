// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`next-eslint-config-project > next-eslint-config-project 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "off",
    },
    "env": {
      "builtin": true,
    },
    "overrides": [
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-var": "error",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-var": "error",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
    ],
    "plugins": [
      "typescript",
      "unicorn",
    ],
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "off",
      "@typescript-eslint/ban-ts-comment": [
        "error",
        {
          "minimumDescriptionLength": 10,
        },
      ],
      "@typescript-eslint/ban-tslint-comment": "error",
      "@typescript-eslint/consistent-generic-constructors": "error",
      "@typescript-eslint/consistent-indexed-object-style": "error",
      "@typescript-eslint/consistent-type-definitions": "off",
      "@typescript-eslint/consistent-type-imports": [
        "warn",
        {
          "fixStyle": "inline-type-imports",
          "prefer": "type-imports",
        },
      ],
      "@typescript-eslint/no-confusing-non-null-assertion": "error",
      "@typescript-eslint/no-duplicate-enum-values": "error",
      "@typescript-eslint/no-dynamic-delete": "error",
      "@typescript-eslint/no-empty-object-type": "error",
      "@typescript-eslint/no-explicit-any": "error",
      "@typescript-eslint/no-extra-non-null-assertion": "error",
      "@typescript-eslint/no-extraneous-class": "error",
      "@typescript-eslint/no-inferrable-types": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-namespace": "error",
      "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
      "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
      "@typescript-eslint/no-non-null-assertion": "error",
      "@typescript-eslint/no-require-imports": "error",
      "@typescript-eslint/no-this-alias": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unsafe-declaration-merging": "error",
      "@typescript-eslint/no-unsafe-function-type": "error",
      "@typescript-eslint/no-wrapper-object-types": "error",
      "@typescript-eslint/prefer-as-const": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-literal-enum-member": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/triple-slash-reference": "error",
      "curly": "off",
      "for-direction": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-empty-character-class": "error",
      "no-empty-function": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-ex-assign": "error",
      "no-extra-boolean-cast": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-loss-of-precision": "error",
      "no-new-native-nonconstructor": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-self-assign": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "off",
      "no-unexpected-multiline": "off",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unsafe-optional-chaining": "error",
      "no-unused-expressions": "error",
      "no-unused-labels": "error",
      "no-unused-private-class-members": "error",
      "no-unused-vars": [
        "warn",
        {
          "argsIgnorePattern": "^_",
        },
      ],
      "no-useless-backreference": "error",
      "no-useless-catch": "error",
      "no-useless-constructor": "error",
      "no-useless-escape": "error",
      "no-with": "error",
      "prefer-promise-reject-errors": "off",
      "require-await": "off",
      "require-yield": "error",
      "unicorn/empty-brace-spaces": "off",
      "unicorn/no-nested-ternary": "off",
      "unicorn/number-literal-case": "off",
      "use-isnan": "error",
      "valid-typeof": "error",
    },
  },
  "warnings": [
    "unsupported rule: constructor-super",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: no-dupe-args",
    "unsupported rule: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule, but in development: getter-return",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/await-thenable",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-array-delete",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-base-to-string",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-confusing-void-expression",
    "unsupported rule: @typescript-eslint/no-deprecated",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-duplicate-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-floating-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-for-in-array",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-implied-eval",
    "unsupported rule: @typescript-eslint/no-invalid-void-type",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-meaningless-void-operator",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-spread",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-mixed-enums",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-redundant-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-boolean-literal-compare",
    "unsupported rule: @typescript-eslint/no-unnecessary-condition",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-template-expression",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-arguments",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-assertion",
    "unsupported rule: @typescript-eslint/no-unnecessary-type-conversion",
    "unsupported rule: @typescript-eslint/no-unnecessary-type-parameters",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-argument",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-assignment",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-call",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-enum-comparison",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-member-access",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-return",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-unary-minus",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/only-throw-error",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-promise-reject-errors",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-reduce-type-parameter",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-return-this-type",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/related-getter-setter-pairs",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/require-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-plus-operands",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-template-expressions",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/return-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/unbound-method",
    "unsupported rule: @typescript-eslint/unified-signatures",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/use-unknown-in-catch-callback-variable",
    "unsupported rule, but in development: getter-return",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "unsupported rule: @typescript-eslint/class-literal-property-style",
    "unsupported rule: @typescript-eslint/consistent-type-assertions",
    "unsupported rule: @typescript-eslint/dot-notation",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/non-nullable-type-assertion-style",
    "unsupported rule: @typescript-eslint/prefer-find",
    "unsupported rule: @typescript-eslint/prefer-includes",
    "unsupported rule: @typescript-eslint/prefer-nullish-coalescing",
    "unsupported rule: @typescript-eslint/prefer-optional-chain",
    "unsupported rule: @typescript-eslint/prefer-regexp-exec",
    "unsupported rule: @typescript-eslint/prefer-string-starts-ends-with",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-promises",
  ],
}
`;

exports[`next-eslint-config-project --type-aware > next-eslint-config-project--type-aware 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "off",
    },
    "env": {
      "builtin": true,
    },
    "overrides": [
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-var": "error",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-var": "error",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
    ],
    "plugins": [
      "typescript",
      "unicorn",
    ],
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "off",
      "@typescript-eslint/await-thenable": "error",
      "@typescript-eslint/ban-ts-comment": [
        "error",
        {
          "minimumDescriptionLength": 10,
        },
      ],
      "@typescript-eslint/ban-tslint-comment": "error",
      "@typescript-eslint/consistent-generic-constructors": "error",
      "@typescript-eslint/consistent-indexed-object-style": "error",
      "@typescript-eslint/consistent-type-definitions": "off",
      "@typescript-eslint/consistent-type-imports": [
        "warn",
        {
          "fixStyle": "inline-type-imports",
          "prefer": "type-imports",
        },
      ],
      "@typescript-eslint/no-array-delete": "error",
      "@typescript-eslint/no-base-to-string": "error",
      "@typescript-eslint/no-confusing-non-null-assertion": "error",
      "@typescript-eslint/no-confusing-void-expression": "error",
      "@typescript-eslint/no-duplicate-enum-values": "error",
      "@typescript-eslint/no-duplicate-type-constituents": "error",
      "@typescript-eslint/no-dynamic-delete": "error",
      "@typescript-eslint/no-empty-object-type": "error",
      "@typescript-eslint/no-explicit-any": "error",
      "@typescript-eslint/no-extra-non-null-assertion": "error",
      "@typescript-eslint/no-extraneous-class": "error",
      "@typescript-eslint/no-floating-promises": "error",
      "@typescript-eslint/no-for-in-array": "error",
      "@typescript-eslint/no-implied-eval": "error",
      "@typescript-eslint/no-inferrable-types": "error",
      "@typescript-eslint/no-meaningless-void-operator": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-misused-promises": [
        "error",
        {
          "checksVoidReturn": {
            "attributes": false,
          },
        },
      ],
      "@typescript-eslint/no-misused-spread": "error",
      "@typescript-eslint/no-mixed-enums": "error",
      "@typescript-eslint/no-namespace": "error",
      "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
      "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
      "@typescript-eslint/no-non-null-assertion": "error",
      "@typescript-eslint/no-redundant-type-constituents": "error",
      "@typescript-eslint/no-require-imports": "error",
      "@typescript-eslint/no-this-alias": "error",
      "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
      "@typescript-eslint/no-unnecessary-template-expression": "error",
      "@typescript-eslint/no-unnecessary-type-arguments": "error",
      "@typescript-eslint/no-unnecessary-type-assertion": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unsafe-argument": "error",
      "@typescript-eslint/no-unsafe-assignment": "error",
      "@typescript-eslint/no-unsafe-call": "error",
      "@typescript-eslint/no-unsafe-declaration-merging": "error",
      "@typescript-eslint/no-unsafe-enum-comparison": "error",
      "@typescript-eslint/no-unsafe-function-type": "error",
      "@typescript-eslint/no-unsafe-member-access": "error",
      "@typescript-eslint/no-unsafe-return": "error",
      "@typescript-eslint/no-unsafe-unary-minus": "error",
      "@typescript-eslint/no-wrapper-object-types": "error",
      "@typescript-eslint/non-nullable-type-assertion-style": "error",
      "@typescript-eslint/only-throw-error": "error",
      "@typescript-eslint/prefer-as-const": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-literal-enum-member": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/prefer-promise-reject-errors": "error",
      "@typescript-eslint/prefer-reduce-type-parameter": "error",
      "@typescript-eslint/prefer-return-this-type": "error",
      "@typescript-eslint/related-getter-setter-pairs": "error",
      "@typescript-eslint/require-await": "error",
      "@typescript-eslint/restrict-plus-operands": [
        "error",
        {
          "allowAny": false,
          "allowBoolean": false,
          "allowNullish": false,
          "allowNumberAndString": false,
          "allowRegExp": false,
        },
      ],
      "@typescript-eslint/restrict-template-expressions": [
        "error",
        {
          "allowAny": false,
          "allowBoolean": false,
          "allowNever": false,
          "allowNullish": false,
          "allowNumber": false,
          "allowRegExp": false,
        },
      ],
      "@typescript-eslint/return-await": [
        "error",
        "error-handling-correctness-only",
      ],
      "@typescript-eslint/triple-slash-reference": "error",
      "@typescript-eslint/unbound-method": "error",
      "@typescript-eslint/use-unknown-in-catch-callback-variable": "error",
      "curly": "off",
      "for-direction": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-empty-character-class": "error",
      "no-empty-function": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-ex-assign": "error",
      "no-extra-boolean-cast": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-loss-of-precision": "error",
      "no-new-native-nonconstructor": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-self-assign": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "off",
      "no-unexpected-multiline": "off",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unsafe-optional-chaining": "error",
      "no-unused-expressions": "error",
      "no-unused-labels": "error",
      "no-unused-private-class-members": "error",
      "no-unused-vars": [
        "warn",
        {
          "argsIgnorePattern": "^_",
        },
      ],
      "no-useless-backreference": "error",
      "no-useless-catch": "error",
      "no-useless-constructor": "error",
      "no-useless-escape": "error",
      "no-with": "error",
      "prefer-promise-reject-errors": "off",
      "require-await": "off",
      "require-yield": "error",
      "unicorn/empty-brace-spaces": "off",
      "unicorn/no-nested-ternary": "off",
      "unicorn/number-literal-case": "off",
      "use-isnan": "error",
      "valid-typeof": "error",
    },
  },
  "warnings": [
    "unsupported rule: constructor-super",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: no-dupe-args",
    "unsupported rule: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule, but in development: getter-return",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "unsupported rule: @typescript-eslint/no-deprecated",
    "unsupported rule: @typescript-eslint/no-invalid-void-type",
    "unsupported rule: @typescript-eslint/no-unnecessary-condition",
    "unsupported rule: @typescript-eslint/no-unnecessary-type-conversion",
    "unsupported rule: @typescript-eslint/no-unnecessary-type-parameters",
    "unsupported rule: @typescript-eslint/unified-signatures",
    "unsupported rule, but in development: getter-return",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "unsupported rule: @typescript-eslint/class-literal-property-style",
    "unsupported rule: @typescript-eslint/consistent-type-assertions",
    "unsupported rule: @typescript-eslint/dot-notation",
    "unsupported rule: @typescript-eslint/prefer-find",
    "unsupported rule: @typescript-eslint/prefer-includes",
    "unsupported rule: @typescript-eslint/prefer-nullish-coalescing",
    "unsupported rule: @typescript-eslint/prefer-optional-chain",
    "unsupported rule: @typescript-eslint/prefer-regexp-exec",
    "unsupported rule: @typescript-eslint/prefer-string-starts-ends-with",
  ],
}
`;

exports[`next-eslint-config-project merge > next-eslint-config-project--merge 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "error",
      "perf": "error",
    },
    "env": {
      "builtin": true,
    },
    "overrides": [
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-var": "error",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-var": "error",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
    ],
    "plugins": [
      "typescript",
      "unicorn",
    ],
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "error",
      "@typescript-eslint/ban-ts-comment": [
        "error",
        {
          "minimumDescriptionLength": 10,
        },
      ],
      "@typescript-eslint/ban-tslint-comment": "error",
      "@typescript-eslint/consistent-generic-constructors": "error",
      "@typescript-eslint/consistent-indexed-object-style": "error",
      "@typescript-eslint/consistent-type-definitions": "error",
      "@typescript-eslint/consistent-type-imports": [
        "warn",
        {
          "fixStyle": "inline-type-imports",
          "prefer": "type-imports",
        },
      ],
      "@typescript-eslint/no-confusing-non-null-assertion": "error",
      "@typescript-eslint/no-dynamic-delete": "error",
      "@typescript-eslint/no-empty-object-type": "error",
      "@typescript-eslint/no-explicit-any": "error",
      "@typescript-eslint/no-extraneous-class": "error",
      "@typescript-eslint/no-inferrable-types": "error",
      "@typescript-eslint/no-namespace": "error",
      "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
      "@typescript-eslint/no-non-null-assertion": "error",
      "@typescript-eslint/no-require-imports": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unsafe-function-type": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-literal-enum-member": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "curly": "off",
      "no-array-constructor": "error",
      "no-case-declarations": "error",
      "no-empty": "error",
      "no-empty-function": "error",
      "no-fallthrough": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-throw-literal": "off",
      "no-unexpected-multiline": "error",
      "no-unused-expressions": "error",
      "no-useless-constructor": "error",
      "prefer-promise-reject-errors": "off",
      "require-await": "off",
      "unicorn/empty-brace-spaces": "off",
      "unicorn/no-nested-ternary": "off",
      "unicorn/number-literal-case": "off",
    },
  },
  "warnings": [
    "unsupported rule: constructor-super",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: no-dupe-args",
    "unsupported rule: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule, but in development: getter-return",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/await-thenable",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-array-delete",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-base-to-string",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-confusing-void-expression",
    "unsupported rule: @typescript-eslint/no-deprecated",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-duplicate-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-floating-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-for-in-array",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-implied-eval",
    "unsupported rule: @typescript-eslint/no-invalid-void-type",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-meaningless-void-operator",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-spread",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-mixed-enums",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-redundant-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-boolean-literal-compare",
    "unsupported rule: @typescript-eslint/no-unnecessary-condition",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-template-expression",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-arguments",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-assertion",
    "unsupported rule: @typescript-eslint/no-unnecessary-type-conversion",
    "unsupported rule: @typescript-eslint/no-unnecessary-type-parameters",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-argument",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-assignment",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-call",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-enum-comparison",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-member-access",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-return",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-unary-minus",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/only-throw-error",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-promise-reject-errors",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-reduce-type-parameter",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-return-this-type",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/related-getter-setter-pairs",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/require-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-plus-operands",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-template-expressions",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/return-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/unbound-method",
    "unsupported rule: @typescript-eslint/unified-signatures",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/use-unknown-in-catch-callback-variable",
    "unsupported rule, but in development: getter-return",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "unsupported rule: @typescript-eslint/class-literal-property-style",
    "unsupported rule: @typescript-eslint/consistent-type-assertions",
    "unsupported rule: @typescript-eslint/dot-notation",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/non-nullable-type-assertion-style",
    "unsupported rule: @typescript-eslint/prefer-find",
    "unsupported rule: @typescript-eslint/prefer-includes",
    "unsupported rule: @typescript-eslint/prefer-nullish-coalescing",
    "unsupported rule: @typescript-eslint/prefer-optional-chain",
    "unsupported rule: @typescript-eslint/prefer-regexp-exec",
    "unsupported rule: @typescript-eslint/prefer-string-starts-ends-with",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-promises",
  ],
}
`;
