// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`typescript > typescript 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "off",
    },
    "env": {
      "builtin": true,
      "commonjs": true,
      "node": true,
      "shared-node-browser": true,
    },
    "ignorePatterns": [
      "**/node_modules/**",
      "built/**",
      "tests/**",
      "lib/**",
      "src/lib/*.generated.d.ts",
      "scripts/**/*.js",
      "scripts/**/*.d.*",
      "internal/**",
      "coverage/**",
    ],
    "overrides": [
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.mjs",
          "**/*.mts",
        ],
        "rules": {
          "no-restricted-globals": [
            "error",
            {
              "name": "__filename",
            },
            {
              "name": "__dirname",
            },
            {
              "name": "require",
            },
            {
              "name": "module",
            },
            {
              "name": "exports",
            },
          ],
        },
      },
      {
        "files": [
          "src/**",
        ],
        "rules": {
          "no-restricted-globals": [
            "error",
            {
              "name": "setTimeout",
            },
            {
              "name": "clearTimeout",
            },
            {
              "name": "setInterval",
            },
            {
              "name": "clearInterval",
            },
            {
              "name": "setImmediate",
            },
            {
              "name": "clearImmediate",
            },
            {
              "name": "performance",
            },
          ],
        },
      },
      {
        "files": [
          "src/harness/**",
          "src/testRunner/**",
        ],
        "rules": {
          "no-restricted-globals": "off",
        },
      },
      {
        "files": [
          "src/lib/*.d.ts",
        ],
        "rules": {
          "@typescript-eslint/no-unsafe-function-type": "off",
          "@typescript-eslint/no-wrapper-object-types": "off",
          "@typescript-eslint/prefer-function-type": "off",
          "no-restricted-globals": "off",
          "no-shadow-restricted-names": "off",
          "no-unused-vars": "off",
          "no-var": "off",
        },
      },
      {
        "files": [
          "src/lib/es2019.array.d.ts",
        ],
        "rules": {
          "@typescript-eslint/array-type": "off",
        },
      },
    ],
    "plugins": [
      "typescript",
    ],
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "error",
      "@typescript-eslint/ban-tslint-comment": "error",
      "@typescript-eslint/consistent-type-definitions": "error",
      "@typescript-eslint/no-confusing-non-null-assertion": "error",
      "@typescript-eslint/no-extra-non-null-assertion": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-this-alias": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unsafe-declaration-merging": "error",
      "@typescript-eslint/no-unsafe-function-type": "error",
      "@typescript-eslint/no-wrapper-object-types": "error",
      "@typescript-eslint/prefer-as-const": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/triple-slash-reference": "error",
      "eqeqeq": "error",
      "for-direction": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-caller": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": [
        "error",
        {
          "checkLoops": false,
        },
      ],
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extra-bind": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-irregular-whitespace": "error",
      "no-loss-of-precision": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-wrappers": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-self-assign": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-unexpected-multiline": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unsafe-optional-chaining": "error",
      "no-unused-expressions": [
        "error",
        {
          "allowTernary": true,
        },
      ],
      "no-unused-labels": "error",
      "no-unused-private-class-members": "error",
      "no-unused-vars": [
        "warn",
        {
          "argsIgnorePattern": "^(_+$|_[^_])",
          "varsIgnorePattern": "^(_+$|_[^_])",
        },
      ],
      "no-useless-catch": "error",
      "no-useless-escape": "error",
      "no-var": "error",
      "no-with": "error",
      "prefer-object-spread": "error",
      "require-yield": "error",
      "unicode-bom": [
        "error",
        "never",
      ],
      "use-isnan": "error",
      "valid-typeof": "error",
    },
  },
  "warnings": [
    "unsupported rule, but in development: constructor-super",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: no-dupe-args",
    "unsupported rule, but in development: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "unsupported rule: @typescript-eslint/class-literal-property-style",
    "unsupported rule: @typescript-eslint/consistent-type-assertions",
    "unsupported rule: prefer-regex-literals",
    "unsupported rule: regexp/confusing-quantifier",
    "unsupported rule: regexp/control-character-escape",
    "unsupported rule: regexp/match-any",
    "unsupported rule: regexp/negation",
    "unsupported rule: regexp/no-contradiction-with-assertion",
    "unsupported rule: regexp/no-dupe-characters-character-class",
    "unsupported rule: regexp/no-dupe-disjunctions",
    "unsupported rule: regexp/no-empty-alternative",
    "unsupported rule: regexp/no-empty-capturing-group",
    "unsupported rule: regexp/no-empty-character-class",
    "unsupported rule: regexp/no-empty-group",
    "unsupported rule: regexp/no-empty-lookarounds-assertion",
    "unsupported rule: regexp/no-empty-string-literal",
    "unsupported rule: regexp/no-escape-backspace",
    "unsupported rule: regexp/no-extra-lookaround-assertions",
    "unsupported rule: regexp/no-invalid-regexp",
    "unsupported rule: regexp/no-invisible-character",
    "unsupported rule: regexp/no-lazy-ends",
    "unsupported rule: regexp/no-legacy-features",
    "unsupported rule: regexp/no-misleading-capturing-group",
    "unsupported rule: regexp/no-misleading-unicode-character",
    "unsupported rule: regexp/no-missing-g-flag",
    "unsupported rule: regexp/no-non-standard-flag",
    "unsupported rule: regexp/no-obscure-range",
    "unsupported rule: regexp/no-optional-assertion",
    "unsupported rule: regexp/no-potentially-useless-backreference",
    "unsupported rule: regexp/no-super-linear-backtracking",
    "unsupported rule: regexp/no-trivially-nested-assertion",
    "unsupported rule: regexp/no-trivially-nested-quantifier",
    "unsupported rule: regexp/no-unused-capturing-group",
    "unsupported rule: regexp/no-useless-assertions",
    "unsupported rule: regexp/no-useless-backreference",
    "unsupported rule: regexp/no-useless-character-class",
    "unsupported rule: regexp/no-useless-dollar-replacements",
    "unsupported rule: regexp/no-useless-escape",
    "unsupported rule: regexp/no-useless-flag",
    "unsupported rule: regexp/no-useless-lazy",
    "unsupported rule: regexp/no-useless-non-capturing-group",
    "unsupported rule: regexp/no-useless-quantifier",
    "unsupported rule: regexp/no-useless-range",
    "unsupported rule: regexp/no-useless-set-operand",
    "unsupported rule: regexp/no-useless-string-literal",
    "unsupported rule: regexp/no-useless-two-nums-quantifier",
    "unsupported rule: regexp/no-zero-quantifier",
    "unsupported rule: regexp/optimal-lookaround-quantifier",
    "unsupported rule: regexp/optimal-quantifier-concatenation",
    "unsupported rule: regexp/prefer-character-class",
    "unsupported rule: regexp/prefer-d",
    "unsupported rule: regexp/prefer-plus-quantifier",
    "unsupported rule: regexp/prefer-predefined-assertion",
    "unsupported rule: regexp/prefer-question-quantifier",
    "unsupported rule: regexp/prefer-range",
    "unsupported rule: regexp/prefer-set-operation",
    "unsupported rule: regexp/prefer-star-quantifier",
    "unsupported rule: regexp/prefer-unicode-codepoint-escapes",
    "unsupported rule: regexp/prefer-w",
    "unsupported rule: regexp/simplify-set-operations",
    "unsupported rule: regexp/sort-flags",
    "unsupported rule: regexp/strict",
    "unsupported rule: regexp/use-ignore-case",
    "unsupported rule: dot-notation",
    "unsupported rule: no-return-await",
    "unsupported rule: no-undef-init",
    "unsupported rule: object-shorthand",
    "unsupported rule: no-restricted-syntax",
    "unsupported rule: @typescript-eslint/naming-convention",
    "unsupported rule: @typescript-eslint/unified-signatures",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-assertion",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/await-thenable",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-array-delete",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-base-to-string",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-confusing-void-expression",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-duplicate-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-floating-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-for-in-array",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-implied-eval",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-meaningless-void-operator",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-spread",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-mixed-enums",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-redundant-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-boolean-literal-compare",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-template-expression",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-arguments",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-argument",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-assignment",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-call",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-enum-comparison",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-member-access",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-return",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-type-assertion",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-unary-minus",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/non-nullable-type-assertion-style",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/only-throw-error",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-promise-reject-errors",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-reduce-type-parameter",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-return-this-type",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/promise-function-async",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/related-getter-setter-pairs",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/require-array-sort-compare",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/require-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-plus-operands",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-template-expressions",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/return-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/switch-exhaustiveness-check",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/unbound-method",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/use-unknown-in-catch-callback-variable",
  ],
}
`;

exports[`typescript --js-plugins > typescript--js-plugins 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "off",
    },
    "env": {
      "builtin": true,
      "commonjs": true,
      "node": true,
      "shared-node-browser": true,
    },
    "ignorePatterns": [
      "**/node_modules/**",
      "built/**",
      "tests/**",
      "lib/**",
      "src/lib/*.generated.d.ts",
      "scripts/**/*.js",
      "scripts/**/*.d.*",
      "internal/**",
      "coverage/**",
    ],
    "jsPlugins": [
      "eslint-plugin-regexp",
    ],
    "overrides": [
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.mjs",
          "**/*.mts",
        ],
        "rules": {
          "no-restricted-globals": [
            "error",
            {
              "name": "__filename",
            },
            {
              "name": "__dirname",
            },
            {
              "name": "require",
            },
            {
              "name": "module",
            },
            {
              "name": "exports",
            },
          ],
        },
      },
      {
        "files": [
          "src/**",
        ],
        "rules": {
          "no-restricted-globals": [
            "error",
            {
              "name": "setTimeout",
            },
            {
              "name": "clearTimeout",
            },
            {
              "name": "setInterval",
            },
            {
              "name": "clearInterval",
            },
            {
              "name": "setImmediate",
            },
            {
              "name": "clearImmediate",
            },
            {
              "name": "performance",
            },
          ],
        },
      },
      {
        "files": [
          "src/harness/**",
          "src/testRunner/**",
        ],
        "rules": {
          "no-restricted-globals": "off",
        },
      },
      {
        "files": [
          "src/lib/*.d.ts",
        ],
        "rules": {
          "@typescript-eslint/no-unsafe-function-type": "off",
          "@typescript-eslint/no-wrapper-object-types": "off",
          "@typescript-eslint/prefer-function-type": "off",
          "no-restricted-globals": "off",
          "no-shadow-restricted-names": "off",
          "no-unused-vars": "off",
          "no-var": "off",
        },
      },
      {
        "files": [
          "src/lib/es2019.array.d.ts",
        ],
        "rules": {
          "@typescript-eslint/array-type": "off",
        },
      },
    ],
    "plugins": [
      "typescript",
    ],
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "error",
      "@typescript-eslint/ban-tslint-comment": "error",
      "@typescript-eslint/consistent-type-definitions": "error",
      "@typescript-eslint/no-confusing-non-null-assertion": "error",
      "@typescript-eslint/no-extra-non-null-assertion": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-this-alias": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unsafe-declaration-merging": "error",
      "@typescript-eslint/no-unsafe-function-type": "error",
      "@typescript-eslint/no-wrapper-object-types": "error",
      "@typescript-eslint/prefer-as-const": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/triple-slash-reference": "error",
      "eqeqeq": "error",
      "eslint-plugin-regexp/confusing-quantifier": "warn",
      "eslint-plugin-regexp/control-character-escape": "error",
      "eslint-plugin-regexp/match-any": "error",
      "eslint-plugin-regexp/negation": "error",
      "eslint-plugin-regexp/no-contradiction-with-assertion": "error",
      "eslint-plugin-regexp/no-dupe-characters-character-class": "error",
      "eslint-plugin-regexp/no-dupe-disjunctions": "error",
      "eslint-plugin-regexp/no-empty-alternative": "warn",
      "eslint-plugin-regexp/no-empty-capturing-group": "error",
      "eslint-plugin-regexp/no-empty-character-class": "error",
      "eslint-plugin-regexp/no-empty-group": "error",
      "eslint-plugin-regexp/no-empty-lookarounds-assertion": "error",
      "eslint-plugin-regexp/no-empty-string-literal": "error",
      "eslint-plugin-regexp/no-escape-backspace": "error",
      "eslint-plugin-regexp/no-extra-lookaround-assertions": "error",
      "eslint-plugin-regexp/no-invalid-regexp": "error",
      "eslint-plugin-regexp/no-invisible-character": "error",
      "eslint-plugin-regexp/no-lazy-ends": "warn",
      "eslint-plugin-regexp/no-legacy-features": "error",
      "eslint-plugin-regexp/no-misleading-capturing-group": "error",
      "eslint-plugin-regexp/no-misleading-unicode-character": "error",
      "eslint-plugin-regexp/no-missing-g-flag": "error",
      "eslint-plugin-regexp/no-non-standard-flag": "error",
      "eslint-plugin-regexp/no-obscure-range": "error",
      "eslint-plugin-regexp/no-optional-assertion": "error",
      "eslint-plugin-regexp/no-potentially-useless-backreference": "warn",
      "eslint-plugin-regexp/no-super-linear-backtracking": "error",
      "eslint-plugin-regexp/no-trivially-nested-assertion": "error",
      "eslint-plugin-regexp/no-trivially-nested-quantifier": "error",
      "eslint-plugin-regexp/no-unused-capturing-group": "error",
      "eslint-plugin-regexp/no-useless-assertions": "error",
      "eslint-plugin-regexp/no-useless-backreference": "error",
      "eslint-plugin-regexp/no-useless-character-class": "error",
      "eslint-plugin-regexp/no-useless-dollar-replacements": "error",
      "eslint-plugin-regexp/no-useless-escape": "error",
      "eslint-plugin-regexp/no-useless-flag": "warn",
      "eslint-plugin-regexp/no-useless-lazy": "error",
      "eslint-plugin-regexp/no-useless-non-capturing-group": "error",
      "eslint-plugin-regexp/no-useless-quantifier": "error",
      "eslint-plugin-regexp/no-useless-range": "error",
      "eslint-plugin-regexp/no-useless-set-operand": "error",
      "eslint-plugin-regexp/no-useless-string-literal": "error",
      "eslint-plugin-regexp/no-useless-two-nums-quantifier": "error",
      "eslint-plugin-regexp/no-zero-quantifier": "error",
      "eslint-plugin-regexp/optimal-lookaround-quantifier": "warn",
      "eslint-plugin-regexp/optimal-quantifier-concatenation": "error",
      "eslint-plugin-regexp/prefer-character-class": "error",
      "eslint-plugin-regexp/prefer-d": "error",
      "eslint-plugin-regexp/prefer-plus-quantifier": "error",
      "eslint-plugin-regexp/prefer-predefined-assertion": "error",
      "eslint-plugin-regexp/prefer-question-quantifier": "error",
      "eslint-plugin-regexp/prefer-range": "error",
      "eslint-plugin-regexp/prefer-set-operation": "error",
      "eslint-plugin-regexp/prefer-star-quantifier": "error",
      "eslint-plugin-regexp/prefer-unicode-codepoint-escapes": "error",
      "eslint-plugin-regexp/prefer-w": "error",
      "eslint-plugin-regexp/simplify-set-operations": "error",
      "eslint-plugin-regexp/sort-flags": "error",
      "eslint-plugin-regexp/strict": "error",
      "eslint-plugin-regexp/use-ignore-case": "error",
      "for-direction": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-caller": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": [
        "error",
        {
          "checkLoops": false,
        },
      ],
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extra-bind": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-irregular-whitespace": "error",
      "no-loss-of-precision": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-wrappers": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-self-assign": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-unexpected-multiline": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unsafe-optional-chaining": "error",
      "no-unused-expressions": [
        "error",
        {
          "allowTernary": true,
        },
      ],
      "no-unused-labels": "error",
      "no-unused-private-class-members": "error",
      "no-unused-vars": [
        "warn",
        {
          "argsIgnorePattern": "^(_+$|_[^_])",
          "varsIgnorePattern": "^(_+$|_[^_])",
        },
      ],
      "no-useless-catch": "error",
      "no-useless-escape": "error",
      "no-var": "error",
      "no-with": "error",
      "prefer-object-spread": "error",
      "require-yield": "error",
      "unicode-bom": [
        "error",
        "never",
      ],
      "use-isnan": "error",
      "valid-typeof": "error",
    },
  },
  "warnings": [
    "unsupported rule, but in development: constructor-super",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: no-dupe-args",
    "unsupported rule, but in development: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "unsupported rule: @typescript-eslint/class-literal-property-style",
    "unsupported rule: @typescript-eslint/consistent-type-assertions",
    "unsupported rule: prefer-regex-literals",
    "unsupported rule: dot-notation",
    "unsupported rule: no-return-await",
    "unsupported rule: no-undef-init",
    "unsupported rule: object-shorthand",
    "unsupported rule: no-restricted-syntax",
    "unsupported rule: @typescript-eslint/naming-convention",
    "unsupported rule: @typescript-eslint/unified-signatures",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-assertion",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/await-thenable",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-array-delete",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-base-to-string",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-confusing-void-expression",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-duplicate-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-floating-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-for-in-array",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-implied-eval",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-meaningless-void-operator",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-spread",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-mixed-enums",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-redundant-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-boolean-literal-compare",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-template-expression",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-arguments",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-argument",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-assignment",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-call",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-enum-comparison",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-member-access",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-return",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-type-assertion",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-unary-minus",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/non-nullable-type-assertion-style",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/only-throw-error",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-promise-reject-errors",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-reduce-type-parameter",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-return-this-type",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/promise-function-async",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/related-getter-setter-pairs",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/require-array-sort-compare",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/require-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-plus-operands",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-template-expressions",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/return-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/switch-exhaustiveness-check",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/unbound-method",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/use-unknown-in-catch-callback-variable",
  ],
}
`;

exports[`typescript --type-aware > typescript--type-aware 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "off",
    },
    "env": {
      "builtin": true,
      "commonjs": true,
      "node": true,
      "shared-node-browser": true,
    },
    "ignorePatterns": [
      "**/node_modules/**",
      "built/**",
      "tests/**",
      "lib/**",
      "src/lib/*.generated.d.ts",
      "scripts/**/*.js",
      "scripts/**/*.d.*",
      "internal/**",
      "coverage/**",
    ],
    "overrides": [
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.mjs",
          "**/*.mts",
        ],
        "rules": {
          "no-restricted-globals": [
            "error",
            {
              "name": "__filename",
            },
            {
              "name": "__dirname",
            },
            {
              "name": "require",
            },
            {
              "name": "module",
            },
            {
              "name": "exports",
            },
          ],
        },
      },
      {
        "files": [
          "src/**",
        ],
        "rules": {
          "@typescript-eslint/no-unnecessary-type-assertion": "error",
          "no-restricted-globals": [
            "error",
            {
              "name": "setTimeout",
            },
            {
              "name": "clearTimeout",
            },
            {
              "name": "setInterval",
            },
            {
              "name": "clearInterval",
            },
            {
              "name": "setImmediate",
            },
            {
              "name": "clearImmediate",
            },
            {
              "name": "performance",
            },
          ],
        },
      },
      {
        "files": [
          "src/harness/**",
          "src/testRunner/**",
        ],
        "rules": {
          "no-restricted-globals": "off",
        },
      },
      {
        "files": [
          "src/lib/*.d.ts",
        ],
        "rules": {
          "@typescript-eslint/await-thenable": "off",
          "@typescript-eslint/no-array-delete": "off",
          "@typescript-eslint/no-base-to-string": "off",
          "@typescript-eslint/no-confusing-void-expression": "off",
          "@typescript-eslint/no-duplicate-type-constituents": "off",
          "@typescript-eslint/no-floating-promises": "off",
          "@typescript-eslint/no-for-in-array": "off",
          "@typescript-eslint/no-implied-eval": "off",
          "@typescript-eslint/no-meaningless-void-operator": "off",
          "@typescript-eslint/no-misused-promises": "off",
          "@typescript-eslint/no-misused-spread": "off",
          "@typescript-eslint/no-mixed-enums": "off",
          "@typescript-eslint/no-redundant-type-constituents": "off",
          "@typescript-eslint/no-unnecessary-boolean-literal-compare": "off",
          "@typescript-eslint/no-unnecessary-template-expression": "off",
          "@typescript-eslint/no-unnecessary-type-arguments": "off",
          "@typescript-eslint/no-unnecessary-type-assertion": "off",
          "@typescript-eslint/no-unsafe-argument": "off",
          "@typescript-eslint/no-unsafe-assignment": "off",
          "@typescript-eslint/no-unsafe-call": "off",
          "@typescript-eslint/no-unsafe-enum-comparison": "off",
          "@typescript-eslint/no-unsafe-member-access": "off",
          "@typescript-eslint/no-unsafe-return": "off",
          "@typescript-eslint/no-unsafe-type-assertion": "off",
          "@typescript-eslint/no-unsafe-unary-minus": "off",
          "@typescript-eslint/non-nullable-type-assertion-style": "off",
          "@typescript-eslint/only-throw-error": "off",
          "@typescript-eslint/prefer-promise-reject-errors": "off",
          "@typescript-eslint/prefer-reduce-type-parameter": "off",
          "@typescript-eslint/prefer-return-this-type": "off",
          "@typescript-eslint/promise-function-async": "off",
          "@typescript-eslint/related-getter-setter-pairs": "off",
          "@typescript-eslint/require-array-sort-compare": "off",
          "@typescript-eslint/require-await": "off",
          "@typescript-eslint/restrict-plus-operands": "off",
          "@typescript-eslint/restrict-template-expressions": "off",
          "@typescript-eslint/return-await": "off",
          "@typescript-eslint/switch-exhaustiveness-check": "off",
          "@typescript-eslint/unbound-method": "off",
          "@typescript-eslint/use-unknown-in-catch-callback-variable": "off",
        },
      },
      {
        "files": [
          "src/lib/*.d.ts",
        ],
        "rules": {
          "@typescript-eslint/no-unsafe-function-type": "off",
          "@typescript-eslint/no-wrapper-object-types": "off",
          "@typescript-eslint/prefer-function-type": "off",
          "no-restricted-globals": "off",
          "no-shadow-restricted-names": "off",
          "no-unused-vars": "off",
          "no-var": "off",
        },
      },
      {
        "files": [
          "src/lib/es2019.array.d.ts",
        ],
        "rules": {
          "@typescript-eslint/array-type": "off",
        },
      },
    ],
    "plugins": [
      "typescript",
    ],
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "error",
      "@typescript-eslint/ban-tslint-comment": "error",
      "@typescript-eslint/consistent-type-definitions": "error",
      "@typescript-eslint/no-confusing-non-null-assertion": "error",
      "@typescript-eslint/no-extra-non-null-assertion": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-this-alias": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unsafe-declaration-merging": "error",
      "@typescript-eslint/no-unsafe-function-type": "error",
      "@typescript-eslint/no-wrapper-object-types": "error",
      "@typescript-eslint/prefer-as-const": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/triple-slash-reference": "error",
      "eqeqeq": "error",
      "for-direction": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-caller": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": [
        "error",
        {
          "checkLoops": false,
        },
      ],
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extra-bind": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-irregular-whitespace": "error",
      "no-loss-of-precision": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-wrappers": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-self-assign": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-unexpected-multiline": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unsafe-optional-chaining": "error",
      "no-unused-expressions": [
        "error",
        {
          "allowTernary": true,
        },
      ],
      "no-unused-labels": "error",
      "no-unused-private-class-members": "error",
      "no-unused-vars": [
        "warn",
        {
          "argsIgnorePattern": "^(_+$|_[^_])",
          "varsIgnorePattern": "^(_+$|_[^_])",
        },
      ],
      "no-useless-catch": "error",
      "no-useless-escape": "error",
      "no-var": "error",
      "no-with": "error",
      "prefer-object-spread": "error",
      "require-yield": "error",
      "unicode-bom": [
        "error",
        "never",
      ],
      "use-isnan": "error",
      "valid-typeof": "error",
    },
  },
  "warnings": [
    "unsupported rule, but in development: constructor-super",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: no-dupe-args",
    "unsupported rule, but in development: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "unsupported rule: @typescript-eslint/class-literal-property-style",
    "unsupported rule: @typescript-eslint/consistent-type-assertions",
    "unsupported rule: prefer-regex-literals",
    "unsupported rule: regexp/confusing-quantifier",
    "unsupported rule: regexp/control-character-escape",
    "unsupported rule: regexp/match-any",
    "unsupported rule: regexp/negation",
    "unsupported rule: regexp/no-contradiction-with-assertion",
    "unsupported rule: regexp/no-dupe-characters-character-class",
    "unsupported rule: regexp/no-dupe-disjunctions",
    "unsupported rule: regexp/no-empty-alternative",
    "unsupported rule: regexp/no-empty-capturing-group",
    "unsupported rule: regexp/no-empty-character-class",
    "unsupported rule: regexp/no-empty-group",
    "unsupported rule: regexp/no-empty-lookarounds-assertion",
    "unsupported rule: regexp/no-empty-string-literal",
    "unsupported rule: regexp/no-escape-backspace",
    "unsupported rule: regexp/no-extra-lookaround-assertions",
    "unsupported rule: regexp/no-invalid-regexp",
    "unsupported rule: regexp/no-invisible-character",
    "unsupported rule: regexp/no-lazy-ends",
    "unsupported rule: regexp/no-legacy-features",
    "unsupported rule: regexp/no-misleading-capturing-group",
    "unsupported rule: regexp/no-misleading-unicode-character",
    "unsupported rule: regexp/no-missing-g-flag",
    "unsupported rule: regexp/no-non-standard-flag",
    "unsupported rule: regexp/no-obscure-range",
    "unsupported rule: regexp/no-optional-assertion",
    "unsupported rule: regexp/no-potentially-useless-backreference",
    "unsupported rule: regexp/no-super-linear-backtracking",
    "unsupported rule: regexp/no-trivially-nested-assertion",
    "unsupported rule: regexp/no-trivially-nested-quantifier",
    "unsupported rule: regexp/no-unused-capturing-group",
    "unsupported rule: regexp/no-useless-assertions",
    "unsupported rule: regexp/no-useless-backreference",
    "unsupported rule: regexp/no-useless-character-class",
    "unsupported rule: regexp/no-useless-dollar-replacements",
    "unsupported rule: regexp/no-useless-escape",
    "unsupported rule: regexp/no-useless-flag",
    "unsupported rule: regexp/no-useless-lazy",
    "unsupported rule: regexp/no-useless-non-capturing-group",
    "unsupported rule: regexp/no-useless-quantifier",
    "unsupported rule: regexp/no-useless-range",
    "unsupported rule: regexp/no-useless-set-operand",
    "unsupported rule: regexp/no-useless-string-literal",
    "unsupported rule: regexp/no-useless-two-nums-quantifier",
    "unsupported rule: regexp/no-zero-quantifier",
    "unsupported rule: regexp/optimal-lookaround-quantifier",
    "unsupported rule: regexp/optimal-quantifier-concatenation",
    "unsupported rule: regexp/prefer-character-class",
    "unsupported rule: regexp/prefer-d",
    "unsupported rule: regexp/prefer-plus-quantifier",
    "unsupported rule: regexp/prefer-predefined-assertion",
    "unsupported rule: regexp/prefer-question-quantifier",
    "unsupported rule: regexp/prefer-range",
    "unsupported rule: regexp/prefer-set-operation",
    "unsupported rule: regexp/prefer-star-quantifier",
    "unsupported rule: regexp/prefer-unicode-codepoint-escapes",
    "unsupported rule: regexp/prefer-w",
    "unsupported rule: regexp/simplify-set-operations",
    "unsupported rule: regexp/sort-flags",
    "unsupported rule: regexp/strict",
    "unsupported rule: regexp/use-ignore-case",
    "unsupported rule: dot-notation",
    "unsupported rule: no-return-await",
    "unsupported rule: no-undef-init",
    "unsupported rule: object-shorthand",
    "unsupported rule: no-restricted-syntax",
    "unsupported rule: @typescript-eslint/naming-convention",
    "unsupported rule: @typescript-eslint/unified-signatures",
  ],
}
`;

exports[`typescript merge > typescript--merge 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "error",
      "perf": "error",
    },
    "env": {
      "builtin": true,
      "commonjs": true,
      "node": true,
      "shared-node-browser": true,
    },
    "ignorePatterns": [
      "**/node_modules/**",
      "built/**",
      "tests/**",
      "lib/**",
      "src/lib/*.generated.d.ts",
      "scripts/**/*.js",
      "scripts/**/*.d.*",
      "internal/**",
      "coverage/**",
    ],
    "overrides": [
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.ts",
          "**/*.tsx",
          "**/*.mts",
          "**/*.cts",
        ],
        "rules": {
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": "off",
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-with": "off",
          "prefer-rest-params": "error",
          "prefer-spread": "error",
        },
      },
      {
        "files": [
          "**/*.mjs",
          "**/*.mts",
        ],
        "rules": {
          "no-restricted-globals": [
            "error",
            {
              "name": "__filename",
            },
            {
              "name": "__dirname",
            },
            {
              "name": "require",
            },
            {
              "name": "module",
            },
            {
              "name": "exports",
            },
          ],
        },
      },
      {
        "files": [
          "src/**",
        ],
        "rules": {
          "no-restricted-globals": [
            "error",
            {
              "name": "setTimeout",
            },
            {
              "name": "clearTimeout",
            },
            {
              "name": "setInterval",
            },
            {
              "name": "clearInterval",
            },
            {
              "name": "setImmediate",
            },
            {
              "name": "clearImmediate",
            },
            {
              "name": "performance",
            },
          ],
        },
      },
      {
        "files": [
          "src/harness/**",
          "src/testRunner/**",
        ],
        "rules": {
          "no-restricted-globals": "off",
        },
      },
      {
        "files": [
          "src/lib/*.d.ts",
        ],
        "rules": {
          "@typescript-eslint/no-unsafe-function-type": "off",
          "@typescript-eslint/no-wrapper-object-types": "off",
          "@typescript-eslint/prefer-function-type": "off",
          "no-restricted-globals": "off",
          "no-shadow-restricted-names": "off",
          "no-unused-vars": "off",
          "no-var": "off",
        },
      },
      {
        "files": [
          "src/lib/es2019.array.d.ts",
        ],
        "rules": {
          "@typescript-eslint/array-type": "off",
        },
      },
    ],
    "plugins": [
      "typescript",
    ],
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "error",
      "@typescript-eslint/ban-ts-comment": "error",
      "@typescript-eslint/ban-tslint-comment": "error",
      "@typescript-eslint/consistent-generic-constructors": "error",
      "@typescript-eslint/consistent-indexed-object-style": "error",
      "@typescript-eslint/consistent-type-definitions": "error",
      "@typescript-eslint/no-confusing-non-null-assertion": "error",
      "@typescript-eslint/no-empty-object-type": "error",
      "@typescript-eslint/no-explicit-any": "error",
      "@typescript-eslint/no-inferrable-types": "error",
      "@typescript-eslint/no-namespace": "error",
      "@typescript-eslint/no-require-imports": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unsafe-function-type": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "eqeqeq": "error",
      "no-array-constructor": "error",
      "no-case-declarations": "error",
      "no-empty": "error",
      "no-empty-function": "error",
      "no-extra-bind": "error",
      "no-fallthrough": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-template-curly-in-string": "error",
      "no-throw-literal": "error",
      "no-unexpected-multiline": "error",
      "no-var": "error",
      "prefer-object-spread": "error",
      "unicode-bom": [
        "error",
        "never",
      ],
    },
  },
  "warnings": [
    "unsupported rule, but in development: constructor-super",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: no-dupe-args",
    "unsupported rule, but in development: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule, but in development: no-undef",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: prefer-const",
    "unsupported rule: @typescript-eslint/class-literal-property-style",
    "unsupported rule: @typescript-eslint/consistent-type-assertions",
    "unsupported rule: prefer-regex-literals",
    "unsupported rule: regexp/confusing-quantifier",
    "unsupported rule: regexp/control-character-escape",
    "unsupported rule: regexp/match-any",
    "unsupported rule: regexp/negation",
    "unsupported rule: regexp/no-contradiction-with-assertion",
    "unsupported rule: regexp/no-dupe-characters-character-class",
    "unsupported rule: regexp/no-dupe-disjunctions",
    "unsupported rule: regexp/no-empty-alternative",
    "unsupported rule: regexp/no-empty-capturing-group",
    "unsupported rule: regexp/no-empty-character-class",
    "unsupported rule: regexp/no-empty-group",
    "unsupported rule: regexp/no-empty-lookarounds-assertion",
    "unsupported rule: regexp/no-empty-string-literal",
    "unsupported rule: regexp/no-escape-backspace",
    "unsupported rule: regexp/no-extra-lookaround-assertions",
    "unsupported rule: regexp/no-invalid-regexp",
    "unsupported rule: regexp/no-invisible-character",
    "unsupported rule: regexp/no-lazy-ends",
    "unsupported rule: regexp/no-legacy-features",
    "unsupported rule: regexp/no-misleading-capturing-group",
    "unsupported rule: regexp/no-misleading-unicode-character",
    "unsupported rule: regexp/no-missing-g-flag",
    "unsupported rule: regexp/no-non-standard-flag",
    "unsupported rule: regexp/no-obscure-range",
    "unsupported rule: regexp/no-optional-assertion",
    "unsupported rule: regexp/no-potentially-useless-backreference",
    "unsupported rule: regexp/no-super-linear-backtracking",
    "unsupported rule: regexp/no-trivially-nested-assertion",
    "unsupported rule: regexp/no-trivially-nested-quantifier",
    "unsupported rule: regexp/no-unused-capturing-group",
    "unsupported rule: regexp/no-useless-assertions",
    "unsupported rule: regexp/no-useless-backreference",
    "unsupported rule: regexp/no-useless-character-class",
    "unsupported rule: regexp/no-useless-dollar-replacements",
    "unsupported rule: regexp/no-useless-escape",
    "unsupported rule: regexp/no-useless-flag",
    "unsupported rule: regexp/no-useless-lazy",
    "unsupported rule: regexp/no-useless-non-capturing-group",
    "unsupported rule: regexp/no-useless-quantifier",
    "unsupported rule: regexp/no-useless-range",
    "unsupported rule: regexp/no-useless-set-operand",
    "unsupported rule: regexp/no-useless-string-literal",
    "unsupported rule: regexp/no-useless-two-nums-quantifier",
    "unsupported rule: regexp/no-zero-quantifier",
    "unsupported rule: regexp/optimal-lookaround-quantifier",
    "unsupported rule: regexp/optimal-quantifier-concatenation",
    "unsupported rule: regexp/prefer-character-class",
    "unsupported rule: regexp/prefer-d",
    "unsupported rule: regexp/prefer-plus-quantifier",
    "unsupported rule: regexp/prefer-predefined-assertion",
    "unsupported rule: regexp/prefer-question-quantifier",
    "unsupported rule: regexp/prefer-range",
    "unsupported rule: regexp/prefer-set-operation",
    "unsupported rule: regexp/prefer-star-quantifier",
    "unsupported rule: regexp/prefer-unicode-codepoint-escapes",
    "unsupported rule: regexp/prefer-w",
    "unsupported rule: regexp/simplify-set-operations",
    "unsupported rule: regexp/sort-flags",
    "unsupported rule: regexp/strict",
    "unsupported rule: regexp/use-ignore-case",
    "unsupported rule: dot-notation",
    "unsupported rule: no-return-await",
    "unsupported rule: no-undef-init",
    "unsupported rule: object-shorthand",
    "unsupported rule: no-restricted-syntax",
    "unsupported rule: @typescript-eslint/naming-convention",
    "unsupported rule: @typescript-eslint/unified-signatures",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-assertion",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/await-thenable",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-array-delete",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-base-to-string",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-confusing-void-expression",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-duplicate-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-floating-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-for-in-array",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-implied-eval",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-meaningless-void-operator",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-promises",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-misused-spread",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-mixed-enums",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-redundant-type-constituents",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-boolean-literal-compare",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-template-expression",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unnecessary-type-arguments",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-argument",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-assignment",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-call",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-enum-comparison",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-member-access",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-return",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-type-assertion",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/no-unsafe-unary-minus",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/non-nullable-type-assertion-style",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/only-throw-error",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-promise-reject-errors",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-reduce-type-parameter",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/prefer-return-this-type",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/promise-function-async",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/related-getter-setter-pairs",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/require-array-sort-compare",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/require-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-plus-operands",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/restrict-template-expressions",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/return-await",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/switch-exhaustiveness-check",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/unbound-method",
    "type-aware rule detected, but \`--type-aware\` is not enabled: @typescript-eslint/use-unknown-in-catch-callback-variable",
  ],
}
`;
