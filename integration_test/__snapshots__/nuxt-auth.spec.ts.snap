// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`nuxt-auth > nuxt-auth 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "off",
    },
    "env": {
      "browser": true,
      "builtin": true,
      "commonjs": true,
      "es2026": true,
      "node": true,
      "shared-node-browser": true,
    },
    "globals": {
      "computed": "readonly",
      "defineEmits": "readonly",
      "defineExpose": "readonly",
      "defineProps": "readonly",
      "onMounted": "readonly",
      "onUnmounted": "readonly",
      "reactive": "readonly",
      "ref": "readonly",
      "shallowReactive": "readonly",
      "shallowRef": "readonly",
      "toRef": "readonly",
      "toRefs": "readonly",
      "watch": "readonly",
      "watchEffect": "readonly",
    },
    "ignorePatterns": [
      "**/logs",
      "**/*.log",
      "**/npm-debug.log*",
      "**/yarn-debug.log*",
      "**/yarn-error.log*",
      "**/lerna-debug.log*",
      "**/.pnpm-debug.log*",
      "**/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json",
      "**/pids",
      "**/*.pid",
      "**/*.seed",
      "**/*.pid.lock",
      "**/lib-cov",
      "**/coverage",
      "**/*.lcov",
      "**/.nyc_output",
      "**/.grunt",
      "**/bower_components",
      "**/.lock-wscript",
      "build/Release",
      "**/node_modules/",
      "**/jspm_packages/",
      "**/web_modules/",
      "**/*.tsbuildinfo",
      "**/.npm",
      "**/.eslintcache",
      "**/.stylelintcache",
      "**/.rpt2_cache/",
      "**/.rts2_cache_cjs/",
      "**/.rts2_cache_es/",
      "**/.rts2_cache_umd/",
      "**/.node_repl_history",
      "**/*.tgz",
      "**/.yarn-integrity",
      "**/.env",
      "**/.env.development.local",
      "**/.env.test.local",
      "**/.env.production.local",
      "**/.env.local",
      "**/.cache",
      "**/.parcel-cache",
      "**/.next",
      "**/out",
      "**/.nuxt",
      "**/dist",
      "**/.cache/",
      ".vuepress/dist",
      "**/.temp",
      "**/.docusaurus",
      "**/.serverless/",
      "**/.fusebox/",
      "**/.dynamodb/",
      "**/.tern-port",
      "**/.vscode-test",
      "**/.idea",
      ".yarn/cache",
      ".yarn/unplugged",
      ".yarn/build-state.yml",
      ".yarn/install-state.gz",
      "**/.pnp.*",
      "**/node_modules",
      "**/package-lock.json",
      "**/yarn.lock",
      "**/pnpm-lock.yaml",
      "**/bun.lockb",
      "**/output",
      "**/temp",
      "**/tmp",
      "**/.tmp",
      "**/.history",
      "**/.vitepress/cache",
      "**/.svelte-kit",
      "**/.vercel",
      "**/.changeset",
      "**/.output",
      "**/.vite-inspect",
      "**/.yarn",
      "**/vite.config.*.timestamp-*",
      "**/CHANGELOG*.md",
      "**/*.min.*",
      "**/LICENSE*",
      "**/__snapshots__",
      "**/auto-import?(s).d.ts",
      "**/components.d.ts",
      ".nuxt",
      "**/.nuxt/**",
      ".output",
      "**/.output/**",
      "dist",
      "**/dist/**",
      "node_modules",
      "**/node_modules/**",
      "**/public/**",
    ],
    "jsPlugins": [
      "eslint-plugin-antfu",
      "eslint-plugin-unused-imports",
      "eslint-plugin-eslint-comments",
      "eslint-plugin-command",
      "eslint-plugin-perfectionist",
      "@stylistic/eslint-plugin",
      "eslint-plugin-regexp",
    ],
    "overrides": [
      {
        "files": [
          "**/*.?([cm])ts",
          "**/*.?([cm])tsx",
          "**/*.vue",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/ban-ts-comment": [
            "error",
            {
              "ts-expect-error": "allow-with-description",
            },
          ],
          "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface",
          ],
          "@typescript-eslint/consistent-type-imports": [
            "error",
            {
              "disallowTypeAnnotations": false,
              "fixStyle": "separate-type-imports",
              "prefer": "type-imports",
            },
          ],
          "@typescript-eslint/no-duplicate-enum-values": "error",
          "@typescript-eslint/no-dynamic-delete": "off",
          "@typescript-eslint/no-empty-object-type": [
            "error",
            {
              "allowInterfaces": "always",
            },
          ],
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-extra-non-null-assertion": "error",
          "@typescript-eslint/no-extraneous-class": "off",
          "@typescript-eslint/no-import-type-side-effects": "error",
          "@typescript-eslint/no-misused-new": "error",
          "@typescript-eslint/no-namespace": "error",
          "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
          "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
          "@typescript-eslint/no-non-null-assertion": "off",
          "@typescript-eslint/no-require-imports": "error",
          "@typescript-eslint/no-this-alias": "error",
          "@typescript-eslint/no-unnecessary-type-constraint": "error",
          "@typescript-eslint/no-unsafe-declaration-merging": "error",
          "@typescript-eslint/no-unsafe-function-type": "error",
          "@typescript-eslint/no-wrapper-object-types": "error",
          "@typescript-eslint/prefer-as-const": "error",
          "@typescript-eslint/prefer-literal-enum-member": "error",
          "@typescript-eslint/prefer-namespace-keyword": "error",
          "@typescript-eslint/triple-slash-reference": "off",
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": [
            "error",
            {
              "builtinGlobals": false,
            },
          ],
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-unused-expressions": [
            "error",
            {
              "allowShortCircuit": true,
              "allowTaggedTemplates": true,
              "allowTernary": true,
            },
          ],
          "no-unused-vars": "off",
          "no-useless-constructor": "off",
          "no-with": "off",
        },
      },
      {
        "files": [
          "**/__tests__/**/*.?([cm])[jt]s?(x)",
          "**/*.spec.?([cm])[jt]s?(x)",
          "**/*.test.?([cm])[jt]s?(x)",
          "**/*.bench.?([cm])[jt]s?(x)",
          "**/*.benchmark.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "vitest",
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
          "no-unused-expressions": "off",
          "vitest/consistent-test-it": [
            "error",
            {
              "fn": "it",
              "withinDescribe": "it",
            },
          ],
          "vitest/no-identical-title": "error",
          "vitest/no-import-node-test": "error",
          "vitest/prefer-hooks-in-order": "error",
          "vitest/prefer-lowercase-title": "error",
        },
      },
      {
        "files": [
          "**/*.vue",
        ],
        "plugins": [
          "vue",
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
          "vue/no-export-in-script-setup": "error",
          "vue/no-multiple-slot-args": "warn",
          "vue/no-required-prop-with-default": "warn",
          "vue/prefer-import-from-vue": "error",
          "vue/valid-define-emits": "error",
          "vue/valid-define-props": "error",
        },
      },
      {
        "files": [
          "**/*.toml",
        ],
        "jsPlugins": [
          "eslint-plugin-toml",
        ],
        "rules": {
          "eslint-plugin-toml/array-bracket-newline": "error",
          "eslint-plugin-toml/array-bracket-spacing": "error",
          "eslint-plugin-toml/array-element-newline": "error",
          "eslint-plugin-toml/comma-style": "error",
          "eslint-plugin-toml/indent": [
            "error",
            2,
          ],
          "eslint-plugin-toml/inline-table-curly-spacing": "error",
          "eslint-plugin-toml/key-spacing": "error",
          "eslint-plugin-toml/keys-order": "error",
          "eslint-plugin-toml/no-space-dots": "error",
          "eslint-plugin-toml/no-unreadable-number-separator": "error",
          "eslint-plugin-toml/padding-line-between-pairs": "error",
          "eslint-plugin-toml/padding-line-between-tables": "error",
          "eslint-plugin-toml/precision-of-fractional-seconds": "error",
          "eslint-plugin-toml/precision-of-integer": "error",
          "eslint-plugin-toml/quoted-keys": "error",
          "eslint-plugin-toml/spaced-comment": "error",
          "eslint-plugin-toml/table-bracket-spacing": "error",
          "eslint-plugin-toml/tables-order": "error",
          "eslint-plugin-toml/vue-custom-block": "error",
        },
      },
      {
        "files": [
          "**/*.md/**/*.?([cm])[jt]s?(x)",
          "**/*.md/**/*.vue",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/consistent-type-imports": "off",
          "@typescript-eslint/explicit-function-return-type": "off",
          "@typescript-eslint/no-namespace": "off",
          "@typescript-eslint/no-require-imports": "off",
          "no-alert": "off",
          "no-labels": "off",
          "no-lone-blocks": "off",
          "no-redeclare": "off",
          "no-unused-expressions": "off",
          "no-unused-labels": "off",
          "no-unused-vars": "off",
          "unicode-bom": "off",
        },
      },
      {
        "files": [
          "**/scripts/**/*.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
        },
      },
      {
        "files": [
          "**/*.js",
          "**/*.cjs",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/no-require-imports": "off",
        },
      },
      {
        "files": [
          "**/*.config.?([cm])[jt]s?(x)",
          "**/*.config.*.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
        },
      },
    ],
    "plugins": [
      "node",
      "jsdoc",
      "import",
      "unicorn",
    ],
    "rules": {
      "@stylistic/eslint-plugin/array-bracket-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/arrow-parens": [
        "error",
        "as-needed",
        {
          "requireForBlockBody": true,
        },
      ],
      "@stylistic/eslint-plugin/arrow-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "@stylistic/eslint-plugin/block-spacing": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/brace-style": [
        "error",
        "stroustrup",
        {
          "allowSingleLine": true,
        },
      ],
      "@stylistic/eslint-plugin/comma-dangle": [
        "error",
        "always-multiline",
      ],
      "@stylistic/eslint-plugin/comma-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/comma-style": [
        "error",
        "last",
      ],
      "@stylistic/eslint-plugin/computed-property-spacing": [
        "error",
        "never",
        {
          "enforceForClassMembers": true,
        },
      ],
      "@stylistic/eslint-plugin/dot-location": [
        "error",
        "property",
      ],
      "@stylistic/eslint-plugin/eol-last": "error",
      "@stylistic/eslint-plugin/generator-star-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/indent": [
        "error",
        2,
        {
          "ArrayExpression": 1,
          "CallExpression": {
            "arguments": 1,
          },
          "FunctionDeclaration": {
            "body": 1,
            "parameters": 1,
            "returnType": 1,
          },
          "FunctionExpression": {
            "body": 1,
            "parameters": 1,
            "returnType": 1,
          },
          "ImportDeclaration": 1,
          "MemberExpression": 1,
          "ObjectExpression": 1,
          "SwitchCase": 1,
          "VariableDeclarator": 1,
          "flatTernaryExpressions": false,
          "ignoreComments": false,
          "ignoredNodes": [
            "TSUnionType",
            "TSIntersectionType",
          ],
          "offsetTernaryExpressions": true,
          "outerIIFEBody": 1,
          "tabLength": 2,
        },
      ],
      "@stylistic/eslint-plugin/indent-binary-ops": [
        "error",
        2,
      ],
      "@stylistic/eslint-plugin/jsx-closing-bracket-location": "error",
      "@stylistic/eslint-plugin/jsx-closing-tag-location": "error",
      "@stylistic/eslint-plugin/jsx-curly-brace-presence": [
        "error",
        {
          "propElementValues": "always",
        },
      ],
      "@stylistic/eslint-plugin/jsx-curly-newline": "error",
      "@stylistic/eslint-plugin/jsx-curly-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/jsx-equals-spacing": "error",
      "@stylistic/eslint-plugin/jsx-first-prop-new-line": "error",
      "@stylistic/eslint-plugin/jsx-function-call-newline": [
        "error",
        "multiline",
      ],
      "@stylistic/eslint-plugin/jsx-indent-props": [
        "error",
        2,
      ],
      "@stylistic/eslint-plugin/jsx-max-props-per-line": [
        "error",
        {
          "maximum": 1,
          "when": "multiline",
        },
      ],
      "@stylistic/eslint-plugin/jsx-one-expression-per-line": [
        "error",
        {
          "allow": "single-child",
        },
      ],
      "@stylistic/eslint-plugin/jsx-quotes": "error",
      "@stylistic/eslint-plugin/jsx-tag-spacing": [
        "error",
        {
          "afterOpening": "never",
          "beforeClosing": "never",
          "beforeSelfClosing": "always",
          "closingSlash": "never",
        },
      ],
      "@stylistic/eslint-plugin/jsx-wrap-multilines": [
        "error",
        {
          "arrow": "parens-new-line",
          "assignment": "parens-new-line",
          "condition": "parens-new-line",
          "declaration": "parens-new-line",
          "logical": "parens-new-line",
          "prop": "parens-new-line",
          "propertyValue": "parens-new-line",
          "return": "parens-new-line",
        },
      ],
      "@stylistic/eslint-plugin/key-spacing": [
        "error",
        {
          "afterColon": true,
          "beforeColon": false,
        },
      ],
      "@stylistic/eslint-plugin/keyword-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "@stylistic/eslint-plugin/lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true,
        },
      ],
      "@stylistic/eslint-plugin/max-statements-per-line": [
        "error",
        {
          "max": 1,
        },
      ],
      "@stylistic/eslint-plugin/member-delimiter-style": [
        "error",
        {
          "multiline": {
            "delimiter": "none",
            "requireLast": false,
          },
          "multilineDetection": "brackets",
          "overrides": {
            "interface": {
              "multiline": {
                "delimiter": "none",
                "requireLast": false,
              },
            },
          },
          "singleline": {
            "delimiter": "comma",
          },
        },
      ],
      "@stylistic/eslint-plugin/multiline-ternary": [
        "error",
        "always-multiline",
      ],
      "@stylistic/eslint-plugin/new-parens": "error",
      "@stylistic/eslint-plugin/no-extra-parens": [
        "error",
        "functions",
      ],
      "@stylistic/eslint-plugin/no-floating-decimal": "error",
      "@stylistic/eslint-plugin/no-mixed-operators": [
        "error",
        {
          "allowSamePrecedence": true,
          "groups": [
            [
              "==",
              "!=",
              "===",
              "!==",
              ">",
              ">=",
              "<",
              "<=",
            ],
            [
              "&&",
              "||",
            ],
            [
              "in",
              "instanceof",
            ],
          ],
        },
      ],
      "@stylistic/eslint-plugin/no-mixed-spaces-and-tabs": "error",
      "@stylistic/eslint-plugin/no-multi-spaces": "error",
      "@stylistic/eslint-plugin/no-multiple-empty-lines": [
        "error",
        {
          "max": 1,
          "maxBOF": 0,
          "maxEOF": 0,
        },
      ],
      "@stylistic/eslint-plugin/no-tabs": "error",
      "@stylistic/eslint-plugin/no-trailing-spaces": "error",
      "@stylistic/eslint-plugin/no-whitespace-before-property": "error",
      "@stylistic/eslint-plugin/object-curly-spacing": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/operator-linebreak": [
        "error",
        "before",
      ],
      "@stylistic/eslint-plugin/padded-blocks": [
        "error",
        {
          "blocks": "never",
          "classes": "never",
          "switches": "never",
        },
      ],
      "@stylistic/eslint-plugin/quote-props": [
        "error",
        "consistent-as-needed",
      ],
      "@stylistic/eslint-plugin/quotes": [
        "error",
        "single",
        {
          "allowTemplateLiterals": "always",
          "avoidEscape": false,
        },
      ],
      "@stylistic/eslint-plugin/rest-spread-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/semi": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/semi-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/space-before-blocks": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "asyncArrow": "always",
          "named": "never",
        },
      ],
      "@stylistic/eslint-plugin/space-in-parens": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/space-infix-ops": "error",
      "@stylistic/eslint-plugin/space-unary-ops": [
        "error",
        {
          "nonwords": false,
          "words": true,
        },
      ],
      "@stylistic/eslint-plugin/spaced-comment": [
        "error",
        "always",
        {
          "block": {
            "balanced": true,
            "exceptions": [
              "*",
            ],
            "markers": [
              "!",
            ],
          },
          "line": {
            "exceptions": [
              "/",
              "#",
            ],
            "markers": [
              "/",
            ],
          },
        },
      ],
      "@stylistic/eslint-plugin/template-curly-spacing": "error",
      "@stylistic/eslint-plugin/template-tag-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/type-annotation-spacing": [
        "error",
        {},
      ],
      "@stylistic/eslint-plugin/type-generic-spacing": "error",
      "@stylistic/eslint-plugin/type-named-tuple-spacing": "error",
      "@stylistic/eslint-plugin/wrap-iife": [
        "error",
        "any",
        {
          "functionPrototypeMethods": true,
        },
      ],
      "@stylistic/eslint-plugin/yield-star-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "array-callback-return": "error",
      "block-scoped-var": "error",
      "curly": [
        "error",
        "all",
      ],
      "default-case-last": "error",
      "eqeqeq": [
        "error",
        "smart",
      ],
      "eslint-plugin-antfu/consistent-chaining": "error",
      "eslint-plugin-antfu/consistent-list-newline": "error",
      "eslint-plugin-antfu/curly": "error",
      "eslint-plugin-antfu/if-newline": "error",
      "eslint-plugin-antfu/import-dedupe": "error",
      "eslint-plugin-antfu/no-import-dist": "error",
      "eslint-plugin-antfu/no-import-node-modules-by-path": "error",
      "eslint-plugin-antfu/no-top-level-await": "error",
      "eslint-plugin-antfu/top-level-function": "error",
      "eslint-plugin-command/command": "error",
      "eslint-plugin-eslint-comments/no-aggregating-enable": "error",
      "eslint-plugin-eslint-comments/no-duplicate-disable": "error",
      "eslint-plugin-eslint-comments/no-unlimited-disable": "error",
      "eslint-plugin-eslint-comments/no-unused-enable": "error",
      "eslint-plugin-perfectionist/sort-exports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-imports": [
        "error",
        {
          "groups": [
            "type",
            [
              "parent-type",
              "sibling-type",
              "index-type",
              "internal-type",
            ],
            "builtin",
            "external",
            "internal",
            [
              "parent",
              "sibling",
              "index",
            ],
            "side-effect",
            "object",
            "unknown",
          ],
          "newlinesBetween": "ignore",
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-named-exports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-named-imports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-regexp/confusing-quantifier": "warn",
      "eslint-plugin-regexp/control-character-escape": "error",
      "eslint-plugin-regexp/match-any": "error",
      "eslint-plugin-regexp/negation": "error",
      "eslint-plugin-regexp/no-contradiction-with-assertion": "error",
      "eslint-plugin-regexp/no-dupe-characters-character-class": "error",
      "eslint-plugin-regexp/no-dupe-disjunctions": "error",
      "eslint-plugin-regexp/no-empty-alternative": "warn",
      "eslint-plugin-regexp/no-empty-capturing-group": "error",
      "eslint-plugin-regexp/no-empty-character-class": "error",
      "eslint-plugin-regexp/no-empty-group": "error",
      "eslint-plugin-regexp/no-empty-lookarounds-assertion": "error",
      "eslint-plugin-regexp/no-empty-string-literal": "error",
      "eslint-plugin-regexp/no-escape-backspace": "error",
      "eslint-plugin-regexp/no-extra-lookaround-assertions": "error",
      "eslint-plugin-regexp/no-invalid-regexp": "error",
      "eslint-plugin-regexp/no-invisible-character": "error",
      "eslint-plugin-regexp/no-lazy-ends": "warn",
      "eslint-plugin-regexp/no-legacy-features": "error",
      "eslint-plugin-regexp/no-misleading-capturing-group": "error",
      "eslint-plugin-regexp/no-misleading-unicode-character": "error",
      "eslint-plugin-regexp/no-missing-g-flag": "error",
      "eslint-plugin-regexp/no-non-standard-flag": "error",
      "eslint-plugin-regexp/no-obscure-range": "error",
      "eslint-plugin-regexp/no-optional-assertion": "error",
      "eslint-plugin-regexp/no-potentially-useless-backreference": "warn",
      "eslint-plugin-regexp/no-super-linear-backtracking": "error",
      "eslint-plugin-regexp/no-trivially-nested-assertion": "error",
      "eslint-plugin-regexp/no-trivially-nested-quantifier": "error",
      "eslint-plugin-regexp/no-unused-capturing-group": "error",
      "eslint-plugin-regexp/no-useless-assertions": "error",
      "eslint-plugin-regexp/no-useless-backreference": "error",
      "eslint-plugin-regexp/no-useless-character-class": "error",
      "eslint-plugin-regexp/no-useless-dollar-replacements": "error",
      "eslint-plugin-regexp/no-useless-escape": "error",
      "eslint-plugin-regexp/no-useless-flag": "warn",
      "eslint-plugin-regexp/no-useless-lazy": "error",
      "eslint-plugin-regexp/no-useless-non-capturing-group": "error",
      "eslint-plugin-regexp/no-useless-quantifier": "error",
      "eslint-plugin-regexp/no-useless-range": "error",
      "eslint-plugin-regexp/no-useless-set-operand": "error",
      "eslint-plugin-regexp/no-useless-string-literal": "error",
      "eslint-plugin-regexp/no-useless-two-nums-quantifier": "error",
      "eslint-plugin-regexp/no-zero-quantifier": "error",
      "eslint-plugin-regexp/optimal-lookaround-quantifier": "warn",
      "eslint-plugin-regexp/optimal-quantifier-concatenation": "error",
      "eslint-plugin-regexp/prefer-character-class": "error",
      "eslint-plugin-regexp/prefer-d": "error",
      "eslint-plugin-regexp/prefer-plus-quantifier": "error",
      "eslint-plugin-regexp/prefer-predefined-assertion": "error",
      "eslint-plugin-regexp/prefer-question-quantifier": "error",
      "eslint-plugin-regexp/prefer-range": "error",
      "eslint-plugin-regexp/prefer-set-operation": "error",
      "eslint-plugin-regexp/prefer-star-quantifier": "error",
      "eslint-plugin-regexp/prefer-unicode-codepoint-escapes": "error",
      "eslint-plugin-regexp/prefer-w": "error",
      "eslint-plugin-regexp/simplify-set-operations": "error",
      "eslint-plugin-regexp/sort-flags": "error",
      "eslint-plugin-regexp/strict": "error",
      "eslint-plugin-regexp/use-ignore-case": "error",
      "eslint-plugin-unused-imports/no-unused-imports": "error",
      "eslint-plugin-unused-imports/no-unused-vars": [
        "error",
        {
          "args": "after-used",
          "argsIgnorePattern": "^_",
          "ignoreRestSiblings": true,
          "vars": "all",
          "varsIgnorePattern": "^_",
        },
      ],
      "import/consistent-type-specifier-style": [
        "error",
        "top-level",
      ],
      "import/first": "error",
      "import/no-duplicates": "error",
      "import/no-mutable-exports": "error",
      "import/no-named-default": "error",
      "jsdoc/check-access": "warn",
      "jsdoc/check-property-names": "warn",
      "jsdoc/empty-tags": "warn",
      "jsdoc/implements-on-classes": "warn",
      "jsdoc/no-defaults": "warn",
      "jsdoc/require-param-name": "warn",
      "jsdoc/require-property": "warn",
      "jsdoc/require-property-description": "warn",
      "jsdoc/require-property-name": "warn",
      "jsdoc/require-returns-description": "warn",
      "new-cap": [
        "error",
        {
          "capIsNew": false,
          "newIsCap": true,
          "properties": true,
        },
      ],
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": [
        "error",
        "always",
      ],
      "no-const-assign": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-class-members": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": [
        "error",
        {
          "allowEmptyCatch": true,
        },
      ],
      "no-empty-pattern": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-boolean-cast": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-irregular-whitespace": "error",
      "no-iterator": "error",
      "no-labels": [
        "error",
        {
          "allowLoop": false,
          "allowSwitch": false,
        },
      ],
      "no-lone-blocks": "error",
      "no-loss-of-precision": "error",
      "no-multi-str": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-wrappers": "error",
      "no-obj-calls": "error",
      "no-proto": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": [
        "error",
        {
          "builtinGlobals": false,
        },
      ],
      "no-regex-spaces": "error",
      "no-restricted-globals": [
        "error",
        {
          "message": "Use \`globalThis\` instead.",
          "name": "global",
        },
        {
          "message": "Use \`globalThis\` instead.",
          "name": "self",
        },
      ],
      "no-self-assign": [
        "error",
        {
          "props": true,
        },
      ],
      "no-self-compare": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-unexpected-multiline": "error",
      "no-unneeded-ternary": [
        "error",
        {
          "defaultAssignment": false,
        },
      ],
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unused-expressions": [
        "error",
        {
          "allowShortCircuit": true,
          "allowTaggedTemplates": true,
          "allowTernary": true,
        },
      ],
      "no-unused-vars": [
        "error",
        {
          "args": "none",
          "caughtErrors": "none",
          "ignoreRestSiblings": true,
          "vars": "all",
        },
      ],
      "no-useless-call": "error",
      "no-useless-catch": "error",
      "no-useless-computed-key": "error",
      "no-useless-constructor": "error",
      "no-useless-rename": "error",
      "no-var": "error",
      "no-with": "error",
      "node/no-exports-assign": "error",
      "node/no-new-require": "error",
      "prefer-exponentiation-operator": "error",
      "prefer-promise-reject-errors": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-template": "error",
      "symbol-description": "error",
      "unicode-bom": [
        "error",
        "never",
      ],
      "unicorn/consistent-empty-array-spread": "error",
      "unicorn/error-message": "error",
      "unicorn/escape-case": "error",
      "unicorn/new-for-builtins": "error",
      "unicorn/no-instanceof-builtins": "error",
      "unicorn/no-new-array": "error",
      "unicorn/no-new-buffer": "error",
      "unicorn/number-literal-case": "error",
      "unicorn/prefer-dom-node-text-content": "error",
      "unicorn/prefer-includes": "error",
      "unicorn/prefer-node-protocol": "error",
      "unicorn/prefer-number-properties": "error",
      "unicorn/prefer-string-starts-ends-with": "error",
      "unicorn/prefer-type-error": "error",
      "unicorn/throw-new-error": "error",
      "use-isnan": [
        "error",
        {
          "enforceForIndexOf": true,
          "enforceForSwitchCase": true,
        },
      ],
      "valid-typeof": [
        "error",
        {
          "requireStringLiterals": true,
        },
      ],
      "vars-on-top": "error",
      "yoda": [
        "error",
        "never",
      ],
    },
  },
  "warnings": [
    "unsupported rule: accessor-pairs",
    "unsupported rule, but in development: constructor-super",
    "unsupported rule: dot-notation",
    "unsupported rule: no-dupe-args",
    "unsupported rule: no-implied-eval",
    "unsupported rule, but in development: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule: no-octal-escape",
    "unsupported rule: no-restricted-properties",
    "unsupported rule: no-restricted-syntax",
    "unsupported rule: no-sequences",
    "unsupported rule, but in development: no-undef",
    "unsupported rule: no-undef-init",
    "unsupported rule: no-unmodified-loop-condition",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: no-unreachable-loop",
    "unsupported rule: no-use-before-define",
    "unsupported rule: no-useless-return",
    "unsupported rule: object-shorthand",
    "unsupported rule: one-var",
    "unsupported rule: prefer-arrow-callback",
    "unsupported rule: prefer-const",
    "unsupported rule: prefer-regex-literals",
    "unsupported rule: node/handle-callback-err",
    "unsupported rule: node/no-deprecated-api",
    "unsupported rule: node/no-path-concat",
    "unsupported rule: node/prefer-global/buffer",
    "unsupported rule: node/prefer-global/process",
    "unsupported rule: node/process-exit-as-throw",
    "unsupported rule: jsdoc/check-param-names",
    "unsupported rule: jsdoc/check-types",
    "unsupported rule: jsdoc/no-multi-asterisks",
    "unsupported rule: jsdoc/require-returns-check",
    "unsupported rule: jsdoc/require-yields-check",
    "unsupported rule: jsdoc/check-alignment",
    "unsupported rule: jsdoc/multiline-blocks",
    "unsupported rule: import/newline-after-import",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: @typescript-eslint/method-signature-style",
    "unsupported rule: @typescript-eslint/no-use-before-define",
    "unsupported rule: vitest/no-only-tests",
    "unsupported rule: vue/comment-directive",
    "unsupported rule: vue/jsx-uses-vars",
    "unsupported rule: vue/no-arrow-functions-in-watch",
    "unsupported rule: vue/no-async-in-computed-properties",
    "unsupported rule: vue/no-child-content",
    "unsupported rule: vue/no-computed-properties-in-data",
    "unsupported rule: vue/no-deprecated-data-object-declaration",
    "unsupported rule: vue/no-deprecated-delete-set",
    "unsupported rule: vue/no-deprecated-destroyed-lifecycle",
    "unsupported rule: vue/no-deprecated-dollar-listeners-api",
    "unsupported rule: vue/no-deprecated-dollar-scopedslots-api",
    "unsupported rule: vue/no-deprecated-events-api",
    "unsupported rule: vue/no-deprecated-filter",
    "unsupported rule: vue/no-deprecated-functional-template",
    "unsupported rule: vue/no-deprecated-html-element-is",
    "unsupported rule: vue/no-deprecated-inline-template",
    "unsupported rule: vue/no-deprecated-model-definition",
    "unsupported rule: vue/no-deprecated-props-default-this",
    "unsupported rule: vue/no-deprecated-router-link-tag-prop",
    "unsupported rule: vue/no-deprecated-scope-attribute",
    "unsupported rule: vue/no-deprecated-slot-attribute",
    "unsupported rule: vue/no-deprecated-slot-scope-attribute",
    "unsupported rule: vue/no-deprecated-v-bind-sync",
    "unsupported rule: vue/no-deprecated-v-is",
    "unsupported rule: vue/no-deprecated-v-on-native-modifier",
    "unsupported rule: vue/no-deprecated-v-on-number-modifiers",
    "unsupported rule: vue/no-deprecated-vue-config-keycodes",
    "unsupported rule: vue/no-dupe-v-else-if",
    "unsupported rule: vue/no-duplicate-attributes",
    "unsupported rule: vue/no-expose-after-await",
    "unsupported rule: vue/no-lifecycle-after-await",
    "unsupported rule: vue/no-mutating-props",
    "unsupported rule: vue/no-parsing-error",
    "unsupported rule: vue/no-ref-as-operand",
    "unsupported rule: vue/no-reserved-component-names",
    "unsupported rule: vue/no-reserved-keys",
    "unsupported rule: vue/no-reserved-props",
    "unsupported rule: vue/no-shared-component-data",
    "unsupported rule: vue/no-side-effects-in-computed-properties",
    "unsupported rule: vue/no-template-key",
    "unsupported rule: vue/no-textarea-mustache",
    "unsupported rule: vue/no-unused-components",
    "unsupported rule: vue/no-unused-vars",
    "unsupported rule: vue/no-use-computed-property-like-method",
    "unsupported rule: vue/no-use-v-if-with-v-for",
    "unsupported rule: vue/no-useless-template-attributes",
    "unsupported rule: vue/no-v-for-template-key-on-child",
    "unsupported rule: vue/no-v-text-v-html-on-component",
    "unsupported rule: vue/no-watch-after-await",
    "unsupported rule: vue/require-component-is",
    "unsupported rule: vue/require-prop-type-constructor",
    "unsupported rule: vue/require-render-return",
    "unsupported rule: vue/require-slots-as-functions",
    "unsupported rule: vue/require-toggle-inside-transition",
    "unsupported rule: vue/require-v-for-key",
    "unsupported rule: vue/require-valid-default-prop",
    "unsupported rule: vue/return-in-computed-property",
    "unsupported rule: vue/return-in-emits-validator",
    "unsupported rule: vue/use-v-on-exact",
    "unsupported rule: vue/valid-attribute-name",
    "unsupported rule: vue/valid-define-options",
    "unsupported rule: vue/valid-next-tick",
    "unsupported rule: vue/valid-template-root",
    "unsupported rule: vue/valid-v-bind",
    "unsupported rule: vue/valid-v-cloak",
    "unsupported rule: vue/valid-v-else-if",
    "unsupported rule: vue/valid-v-else",
    "unsupported rule: vue/valid-v-for",
    "unsupported rule: vue/valid-v-html",
    "unsupported rule: vue/valid-v-if",
    "unsupported rule: vue/valid-v-is",
    "unsupported rule: vue/valid-v-memo",
    "unsupported rule: vue/valid-v-model",
    "unsupported rule: vue/valid-v-on",
    "unsupported rule: vue/valid-v-once",
    "unsupported rule: vue/valid-v-pre",
    "unsupported rule: vue/valid-v-show",
    "unsupported rule: vue/valid-v-slot",
    "unsupported rule: vue/valid-v-text",
    "unsupported rule: vue/attribute-hyphenation",
    "unsupported rule: vue/component-definition-name-casing",
    "unsupported rule: vue/first-attribute-linebreak",
    "unsupported rule: vue/html-closing-bracket-newline",
    "unsupported rule: vue/html-closing-bracket-spacing",
    "unsupported rule: vue/html-end-tags",
    "unsupported rule: vue/html-indent",
    "unsupported rule: vue/html-quotes",
    "unsupported rule: vue/html-self-closing",
    "unsupported rule: vue/multiline-html-element-content-newline",
    "unsupported rule: vue/mustache-interpolation-spacing",
    "unsupported rule: vue/no-multi-spaces",
    "unsupported rule: vue/no-spaces-around-equal-signs-in-attribute",
    "unsupported rule: vue/no-template-shadow",
    "unsupported rule: vue/one-component-per-file",
    "unsupported rule: vue/prop-name-casing",
    "unsupported rule: vue/require-explicit-emits",
    "unsupported rule: vue/singleline-html-element-content-newline",
    "unsupported rule: vue/v-bind-style",
    "unsupported rule: vue/v-on-event-hyphenation",
    "unsupported rule: vue/v-on-style",
    "unsupported rule: vue/v-slot-style",
    "unsupported rule: vue/attributes-order",
    "unsupported rule: vue/block-order",
    "unsupported rule: vue/no-lone-template",
    "unsupported rule: vue/order-in-components",
    "unsupported rule: vue/this-in-template",
    "unsupported rule: vue/component-name-in-template-casing",
    "unsupported rule: vue/component-options-name-casing",
    "unsupported rule: vue/custom-event-name-casing",
    "unsupported rule: vue/define-macros-order",
    "unsupported rule: vue/dot-location",
    "unsupported rule: vue/dot-notation",
    "unsupported rule: vue/eqeqeq",
    "unsupported rule: vue/no-empty-pattern",
    "unsupported rule: vue/no-irregular-whitespace",
    "unsupported rule: vue/no-loss-of-precision",
    "unsupported rule: vue/no-restricted-syntax",
    "unsupported rule: vue/no-restricted-v-bind",
    "unsupported rule: vue/no-sparse-arrays",
    "unsupported rule: vue/no-unused-refs",
    "unsupported rule: vue/no-useless-v-bind",
    "unsupported rule: vue/object-shorthand",
    "unsupported rule: vue/prefer-separate-static-class",
    "unsupported rule: vue/prefer-template",
    "unsupported rule: vue/space-infix-ops",
    "unsupported rule: vue/space-unary-ops",
    "unsupported rule: vue/array-bracket-spacing",
    "unsupported rule: vue/arrow-spacing",
    "unsupported rule: vue/block-spacing",
    "unsupported rule: vue/block-tag-newline",
    "unsupported rule: vue/brace-style",
    "unsupported rule: vue/comma-dangle",
    "unsupported rule: vue/comma-spacing",
    "unsupported rule: vue/comma-style",
    "unsupported rule: vue/html-comment-content-spacing",
    "unsupported rule: vue/key-spacing",
    "unsupported rule: vue/keyword-spacing",
    "unsupported rule: vue/object-curly-spacing",
    "unsupported rule: vue/object-property-newline",
    "unsupported rule: vue/operator-linebreak",
    "unsupported rule: vue/padding-line-between-blocks",
    "unsupported rule: vue/quote-props",
    "unsupported rule: vue/space-in-parens",
    "unsupported rule: vue/template-curly-spacing",
    "special parser detected: vue-eslint-parser",
    "special parser detected: toml-eslint-parser",
    "ignore list inside overrides is not supported",
    "special parser detected: parser-plain",
  ],
}
`;

exports[`nuxt-auth --type-aware > nuxt-auth--type-aware 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "off",
    },
    "env": {
      "browser": true,
      "builtin": true,
      "commonjs": true,
      "es2026": true,
      "node": true,
      "shared-node-browser": true,
    },
    "globals": {
      "computed": "readonly",
      "defineEmits": "readonly",
      "defineExpose": "readonly",
      "defineProps": "readonly",
      "onMounted": "readonly",
      "onUnmounted": "readonly",
      "reactive": "readonly",
      "ref": "readonly",
      "shallowReactive": "readonly",
      "shallowRef": "readonly",
      "toRef": "readonly",
      "toRefs": "readonly",
      "watch": "readonly",
      "watchEffect": "readonly",
    },
    "ignorePatterns": [
      "**/logs",
      "**/*.log",
      "**/npm-debug.log*",
      "**/yarn-debug.log*",
      "**/yarn-error.log*",
      "**/lerna-debug.log*",
      "**/.pnpm-debug.log*",
      "**/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json",
      "**/pids",
      "**/*.pid",
      "**/*.seed",
      "**/*.pid.lock",
      "**/lib-cov",
      "**/coverage",
      "**/*.lcov",
      "**/.nyc_output",
      "**/.grunt",
      "**/bower_components",
      "**/.lock-wscript",
      "build/Release",
      "**/node_modules/",
      "**/jspm_packages/",
      "**/web_modules/",
      "**/*.tsbuildinfo",
      "**/.npm",
      "**/.eslintcache",
      "**/.stylelintcache",
      "**/.rpt2_cache/",
      "**/.rts2_cache_cjs/",
      "**/.rts2_cache_es/",
      "**/.rts2_cache_umd/",
      "**/.node_repl_history",
      "**/*.tgz",
      "**/.yarn-integrity",
      "**/.env",
      "**/.env.development.local",
      "**/.env.test.local",
      "**/.env.production.local",
      "**/.env.local",
      "**/.cache",
      "**/.parcel-cache",
      "**/.next",
      "**/out",
      "**/.nuxt",
      "**/dist",
      "**/.cache/",
      ".vuepress/dist",
      "**/.temp",
      "**/.docusaurus",
      "**/.serverless/",
      "**/.fusebox/",
      "**/.dynamodb/",
      "**/.tern-port",
      "**/.vscode-test",
      "**/.idea",
      ".yarn/cache",
      ".yarn/unplugged",
      ".yarn/build-state.yml",
      ".yarn/install-state.gz",
      "**/.pnp.*",
      "**/node_modules",
      "**/package-lock.json",
      "**/yarn.lock",
      "**/pnpm-lock.yaml",
      "**/bun.lockb",
      "**/output",
      "**/temp",
      "**/tmp",
      "**/.tmp",
      "**/.history",
      "**/.vitepress/cache",
      "**/.svelte-kit",
      "**/.vercel",
      "**/.changeset",
      "**/.output",
      "**/.vite-inspect",
      "**/.yarn",
      "**/vite.config.*.timestamp-*",
      "**/CHANGELOG*.md",
      "**/*.min.*",
      "**/LICENSE*",
      "**/__snapshots__",
      "**/auto-import?(s).d.ts",
      "**/components.d.ts",
      ".nuxt",
      "**/.nuxt/**",
      ".output",
      "**/.output/**",
      "dist",
      "**/dist/**",
      "node_modules",
      "**/node_modules/**",
      "**/public/**",
    ],
    "jsPlugins": [
      "eslint-plugin-antfu",
      "eslint-plugin-unused-imports",
      "eslint-plugin-eslint-comments",
      "eslint-plugin-command",
      "eslint-plugin-perfectionist",
      "@stylistic/eslint-plugin",
      "eslint-plugin-regexp",
    ],
    "overrides": [
      {
        "files": [
          "**/*.?([cm])ts",
          "**/*.?([cm])tsx",
          "**/*.vue",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/ban-ts-comment": [
            "error",
            {
              "ts-expect-error": "allow-with-description",
            },
          ],
          "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface",
          ],
          "@typescript-eslint/consistent-type-imports": [
            "error",
            {
              "disallowTypeAnnotations": false,
              "fixStyle": "separate-type-imports",
              "prefer": "type-imports",
            },
          ],
          "@typescript-eslint/no-duplicate-enum-values": "error",
          "@typescript-eslint/no-dynamic-delete": "off",
          "@typescript-eslint/no-empty-object-type": [
            "error",
            {
              "allowInterfaces": "always",
            },
          ],
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-extra-non-null-assertion": "error",
          "@typescript-eslint/no-extraneous-class": "off",
          "@typescript-eslint/no-import-type-side-effects": "error",
          "@typescript-eslint/no-misused-new": "error",
          "@typescript-eslint/no-namespace": "error",
          "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
          "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
          "@typescript-eslint/no-non-null-assertion": "off",
          "@typescript-eslint/no-require-imports": "error",
          "@typescript-eslint/no-this-alias": "error",
          "@typescript-eslint/no-unnecessary-type-constraint": "error",
          "@typescript-eslint/no-unsafe-declaration-merging": "error",
          "@typescript-eslint/no-unsafe-function-type": "error",
          "@typescript-eslint/no-wrapper-object-types": "error",
          "@typescript-eslint/prefer-as-const": "error",
          "@typescript-eslint/prefer-literal-enum-member": "error",
          "@typescript-eslint/prefer-namespace-keyword": "error",
          "@typescript-eslint/triple-slash-reference": "off",
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": [
            "error",
            {
              "builtinGlobals": false,
            },
          ],
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-unused-expressions": [
            "error",
            {
              "allowShortCircuit": true,
              "allowTaggedTemplates": true,
              "allowTernary": true,
            },
          ],
          "no-unused-vars": "off",
          "no-useless-constructor": "off",
          "no-with": "off",
        },
      },
      {
        "files": [
          "**/__tests__/**/*.?([cm])[jt]s?(x)",
          "**/*.spec.?([cm])[jt]s?(x)",
          "**/*.test.?([cm])[jt]s?(x)",
          "**/*.bench.?([cm])[jt]s?(x)",
          "**/*.benchmark.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "vitest",
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
          "no-unused-expressions": "off",
          "vitest/consistent-test-it": [
            "error",
            {
              "fn": "it",
              "withinDescribe": "it",
            },
          ],
          "vitest/no-identical-title": "error",
          "vitest/no-import-node-test": "error",
          "vitest/prefer-hooks-in-order": "error",
          "vitest/prefer-lowercase-title": "error",
        },
      },
      {
        "files": [
          "**/*.vue",
        ],
        "plugins": [
          "vue",
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
          "vue/no-export-in-script-setup": "error",
          "vue/no-multiple-slot-args": "warn",
          "vue/no-required-prop-with-default": "warn",
          "vue/prefer-import-from-vue": "error",
          "vue/valid-define-emits": "error",
          "vue/valid-define-props": "error",
        },
      },
      {
        "files": [
          "**/*.toml",
        ],
        "jsPlugins": [
          "eslint-plugin-toml",
        ],
        "rules": {
          "eslint-plugin-toml/array-bracket-newline": "error",
          "eslint-plugin-toml/array-bracket-spacing": "error",
          "eslint-plugin-toml/array-element-newline": "error",
          "eslint-plugin-toml/comma-style": "error",
          "eslint-plugin-toml/indent": [
            "error",
            2,
          ],
          "eslint-plugin-toml/inline-table-curly-spacing": "error",
          "eslint-plugin-toml/key-spacing": "error",
          "eslint-plugin-toml/keys-order": "error",
          "eslint-plugin-toml/no-space-dots": "error",
          "eslint-plugin-toml/no-unreadable-number-separator": "error",
          "eslint-plugin-toml/padding-line-between-pairs": "error",
          "eslint-plugin-toml/padding-line-between-tables": "error",
          "eslint-plugin-toml/precision-of-fractional-seconds": "error",
          "eslint-plugin-toml/precision-of-integer": "error",
          "eslint-plugin-toml/quoted-keys": "error",
          "eslint-plugin-toml/spaced-comment": "error",
          "eslint-plugin-toml/table-bracket-spacing": "error",
          "eslint-plugin-toml/tables-order": "error",
          "eslint-plugin-toml/vue-custom-block": "error",
        },
      },
      {
        "files": [
          "**/*.md/**/*.?([cm])[jt]s?(x)",
          "**/*.md/**/*.vue",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/consistent-type-imports": "off",
          "@typescript-eslint/explicit-function-return-type": "off",
          "@typescript-eslint/no-namespace": "off",
          "@typescript-eslint/no-require-imports": "off",
          "no-alert": "off",
          "no-labels": "off",
          "no-lone-blocks": "off",
          "no-redeclare": "off",
          "no-unused-expressions": "off",
          "no-unused-labels": "off",
          "no-unused-vars": "off",
          "unicode-bom": "off",
        },
      },
      {
        "files": [
          "**/scripts/**/*.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
        },
      },
      {
        "files": [
          "**/*.js",
          "**/*.cjs",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/no-require-imports": "off",
        },
      },
      {
        "files": [
          "**/*.config.?([cm])[jt]s?(x)",
          "**/*.config.*.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
        },
      },
    ],
    "plugins": [
      "node",
      "jsdoc",
      "import",
      "unicorn",
    ],
    "rules": {
      "@stylistic/eslint-plugin/array-bracket-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/arrow-parens": [
        "error",
        "as-needed",
        {
          "requireForBlockBody": true,
        },
      ],
      "@stylistic/eslint-plugin/arrow-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "@stylistic/eslint-plugin/block-spacing": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/brace-style": [
        "error",
        "stroustrup",
        {
          "allowSingleLine": true,
        },
      ],
      "@stylistic/eslint-plugin/comma-dangle": [
        "error",
        "always-multiline",
      ],
      "@stylistic/eslint-plugin/comma-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/comma-style": [
        "error",
        "last",
      ],
      "@stylistic/eslint-plugin/computed-property-spacing": [
        "error",
        "never",
        {
          "enforceForClassMembers": true,
        },
      ],
      "@stylistic/eslint-plugin/dot-location": [
        "error",
        "property",
      ],
      "@stylistic/eslint-plugin/eol-last": "error",
      "@stylistic/eslint-plugin/generator-star-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/indent": [
        "error",
        2,
        {
          "ArrayExpression": 1,
          "CallExpression": {
            "arguments": 1,
          },
          "FunctionDeclaration": {
            "body": 1,
            "parameters": 1,
            "returnType": 1,
          },
          "FunctionExpression": {
            "body": 1,
            "parameters": 1,
            "returnType": 1,
          },
          "ImportDeclaration": 1,
          "MemberExpression": 1,
          "ObjectExpression": 1,
          "SwitchCase": 1,
          "VariableDeclarator": 1,
          "flatTernaryExpressions": false,
          "ignoreComments": false,
          "ignoredNodes": [
            "TSUnionType",
            "TSIntersectionType",
          ],
          "offsetTernaryExpressions": true,
          "outerIIFEBody": 1,
          "tabLength": 2,
        },
      ],
      "@stylistic/eslint-plugin/indent-binary-ops": [
        "error",
        2,
      ],
      "@stylistic/eslint-plugin/jsx-closing-bracket-location": "error",
      "@stylistic/eslint-plugin/jsx-closing-tag-location": "error",
      "@stylistic/eslint-plugin/jsx-curly-brace-presence": [
        "error",
        {
          "propElementValues": "always",
        },
      ],
      "@stylistic/eslint-plugin/jsx-curly-newline": "error",
      "@stylistic/eslint-plugin/jsx-curly-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/jsx-equals-spacing": "error",
      "@stylistic/eslint-plugin/jsx-first-prop-new-line": "error",
      "@stylistic/eslint-plugin/jsx-function-call-newline": [
        "error",
        "multiline",
      ],
      "@stylistic/eslint-plugin/jsx-indent-props": [
        "error",
        2,
      ],
      "@stylistic/eslint-plugin/jsx-max-props-per-line": [
        "error",
        {
          "maximum": 1,
          "when": "multiline",
        },
      ],
      "@stylistic/eslint-plugin/jsx-one-expression-per-line": [
        "error",
        {
          "allow": "single-child",
        },
      ],
      "@stylistic/eslint-plugin/jsx-quotes": "error",
      "@stylistic/eslint-plugin/jsx-tag-spacing": [
        "error",
        {
          "afterOpening": "never",
          "beforeClosing": "never",
          "beforeSelfClosing": "always",
          "closingSlash": "never",
        },
      ],
      "@stylistic/eslint-plugin/jsx-wrap-multilines": [
        "error",
        {
          "arrow": "parens-new-line",
          "assignment": "parens-new-line",
          "condition": "parens-new-line",
          "declaration": "parens-new-line",
          "logical": "parens-new-line",
          "prop": "parens-new-line",
          "propertyValue": "parens-new-line",
          "return": "parens-new-line",
        },
      ],
      "@stylistic/eslint-plugin/key-spacing": [
        "error",
        {
          "afterColon": true,
          "beforeColon": false,
        },
      ],
      "@stylistic/eslint-plugin/keyword-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "@stylistic/eslint-plugin/lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true,
        },
      ],
      "@stylistic/eslint-plugin/max-statements-per-line": [
        "error",
        {
          "max": 1,
        },
      ],
      "@stylistic/eslint-plugin/member-delimiter-style": [
        "error",
        {
          "multiline": {
            "delimiter": "none",
            "requireLast": false,
          },
          "multilineDetection": "brackets",
          "overrides": {
            "interface": {
              "multiline": {
                "delimiter": "none",
                "requireLast": false,
              },
            },
          },
          "singleline": {
            "delimiter": "comma",
          },
        },
      ],
      "@stylistic/eslint-plugin/multiline-ternary": [
        "error",
        "always-multiline",
      ],
      "@stylistic/eslint-plugin/new-parens": "error",
      "@stylistic/eslint-plugin/no-extra-parens": [
        "error",
        "functions",
      ],
      "@stylistic/eslint-plugin/no-floating-decimal": "error",
      "@stylistic/eslint-plugin/no-mixed-operators": [
        "error",
        {
          "allowSamePrecedence": true,
          "groups": [
            [
              "==",
              "!=",
              "===",
              "!==",
              ">",
              ">=",
              "<",
              "<=",
            ],
            [
              "&&",
              "||",
            ],
            [
              "in",
              "instanceof",
            ],
          ],
        },
      ],
      "@stylistic/eslint-plugin/no-mixed-spaces-and-tabs": "error",
      "@stylistic/eslint-plugin/no-multi-spaces": "error",
      "@stylistic/eslint-plugin/no-multiple-empty-lines": [
        "error",
        {
          "max": 1,
          "maxBOF": 0,
          "maxEOF": 0,
        },
      ],
      "@stylistic/eslint-plugin/no-tabs": "error",
      "@stylistic/eslint-plugin/no-trailing-spaces": "error",
      "@stylistic/eslint-plugin/no-whitespace-before-property": "error",
      "@stylistic/eslint-plugin/object-curly-spacing": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/operator-linebreak": [
        "error",
        "before",
      ],
      "@stylistic/eslint-plugin/padded-blocks": [
        "error",
        {
          "blocks": "never",
          "classes": "never",
          "switches": "never",
        },
      ],
      "@stylistic/eslint-plugin/quote-props": [
        "error",
        "consistent-as-needed",
      ],
      "@stylistic/eslint-plugin/quotes": [
        "error",
        "single",
        {
          "allowTemplateLiterals": "always",
          "avoidEscape": false,
        },
      ],
      "@stylistic/eslint-plugin/rest-spread-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/semi": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/semi-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/space-before-blocks": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "asyncArrow": "always",
          "named": "never",
        },
      ],
      "@stylistic/eslint-plugin/space-in-parens": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/space-infix-ops": "error",
      "@stylistic/eslint-plugin/space-unary-ops": [
        "error",
        {
          "nonwords": false,
          "words": true,
        },
      ],
      "@stylistic/eslint-plugin/spaced-comment": [
        "error",
        "always",
        {
          "block": {
            "balanced": true,
            "exceptions": [
              "*",
            ],
            "markers": [
              "!",
            ],
          },
          "line": {
            "exceptions": [
              "/",
              "#",
            ],
            "markers": [
              "/",
            ],
          },
        },
      ],
      "@stylistic/eslint-plugin/template-curly-spacing": "error",
      "@stylistic/eslint-plugin/template-tag-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/type-annotation-spacing": [
        "error",
        {},
      ],
      "@stylistic/eslint-plugin/type-generic-spacing": "error",
      "@stylistic/eslint-plugin/type-named-tuple-spacing": "error",
      "@stylistic/eslint-plugin/wrap-iife": [
        "error",
        "any",
        {
          "functionPrototypeMethods": true,
        },
      ],
      "@stylistic/eslint-plugin/yield-star-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "array-callback-return": "error",
      "block-scoped-var": "error",
      "curly": [
        "error",
        "all",
      ],
      "default-case-last": "error",
      "eqeqeq": [
        "error",
        "smart",
      ],
      "eslint-plugin-antfu/consistent-chaining": "error",
      "eslint-plugin-antfu/consistent-list-newline": "error",
      "eslint-plugin-antfu/curly": "error",
      "eslint-plugin-antfu/if-newline": "error",
      "eslint-plugin-antfu/import-dedupe": "error",
      "eslint-plugin-antfu/no-import-dist": "error",
      "eslint-plugin-antfu/no-import-node-modules-by-path": "error",
      "eslint-plugin-antfu/no-top-level-await": "error",
      "eslint-plugin-antfu/top-level-function": "error",
      "eslint-plugin-command/command": "error",
      "eslint-plugin-eslint-comments/no-aggregating-enable": "error",
      "eslint-plugin-eslint-comments/no-duplicate-disable": "error",
      "eslint-plugin-eslint-comments/no-unlimited-disable": "error",
      "eslint-plugin-eslint-comments/no-unused-enable": "error",
      "eslint-plugin-perfectionist/sort-exports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-imports": [
        "error",
        {
          "groups": [
            "type",
            [
              "parent-type",
              "sibling-type",
              "index-type",
              "internal-type",
            ],
            "builtin",
            "external",
            "internal",
            [
              "parent",
              "sibling",
              "index",
            ],
            "side-effect",
            "object",
            "unknown",
          ],
          "newlinesBetween": "ignore",
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-named-exports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-named-imports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-regexp/confusing-quantifier": "warn",
      "eslint-plugin-regexp/control-character-escape": "error",
      "eslint-plugin-regexp/match-any": "error",
      "eslint-plugin-regexp/negation": "error",
      "eslint-plugin-regexp/no-contradiction-with-assertion": "error",
      "eslint-plugin-regexp/no-dupe-characters-character-class": "error",
      "eslint-plugin-regexp/no-dupe-disjunctions": "error",
      "eslint-plugin-regexp/no-empty-alternative": "warn",
      "eslint-plugin-regexp/no-empty-capturing-group": "error",
      "eslint-plugin-regexp/no-empty-character-class": "error",
      "eslint-plugin-regexp/no-empty-group": "error",
      "eslint-plugin-regexp/no-empty-lookarounds-assertion": "error",
      "eslint-plugin-regexp/no-empty-string-literal": "error",
      "eslint-plugin-regexp/no-escape-backspace": "error",
      "eslint-plugin-regexp/no-extra-lookaround-assertions": "error",
      "eslint-plugin-regexp/no-invalid-regexp": "error",
      "eslint-plugin-regexp/no-invisible-character": "error",
      "eslint-plugin-regexp/no-lazy-ends": "warn",
      "eslint-plugin-regexp/no-legacy-features": "error",
      "eslint-plugin-regexp/no-misleading-capturing-group": "error",
      "eslint-plugin-regexp/no-misleading-unicode-character": "error",
      "eslint-plugin-regexp/no-missing-g-flag": "error",
      "eslint-plugin-regexp/no-non-standard-flag": "error",
      "eslint-plugin-regexp/no-obscure-range": "error",
      "eslint-plugin-regexp/no-optional-assertion": "error",
      "eslint-plugin-regexp/no-potentially-useless-backreference": "warn",
      "eslint-plugin-regexp/no-super-linear-backtracking": "error",
      "eslint-plugin-regexp/no-trivially-nested-assertion": "error",
      "eslint-plugin-regexp/no-trivially-nested-quantifier": "error",
      "eslint-plugin-regexp/no-unused-capturing-group": "error",
      "eslint-plugin-regexp/no-useless-assertions": "error",
      "eslint-plugin-regexp/no-useless-backreference": "error",
      "eslint-plugin-regexp/no-useless-character-class": "error",
      "eslint-plugin-regexp/no-useless-dollar-replacements": "error",
      "eslint-plugin-regexp/no-useless-escape": "error",
      "eslint-plugin-regexp/no-useless-flag": "warn",
      "eslint-plugin-regexp/no-useless-lazy": "error",
      "eslint-plugin-regexp/no-useless-non-capturing-group": "error",
      "eslint-plugin-regexp/no-useless-quantifier": "error",
      "eslint-plugin-regexp/no-useless-range": "error",
      "eslint-plugin-regexp/no-useless-set-operand": "error",
      "eslint-plugin-regexp/no-useless-string-literal": "error",
      "eslint-plugin-regexp/no-useless-two-nums-quantifier": "error",
      "eslint-plugin-regexp/no-zero-quantifier": "error",
      "eslint-plugin-regexp/optimal-lookaround-quantifier": "warn",
      "eslint-plugin-regexp/optimal-quantifier-concatenation": "error",
      "eslint-plugin-regexp/prefer-character-class": "error",
      "eslint-plugin-regexp/prefer-d": "error",
      "eslint-plugin-regexp/prefer-plus-quantifier": "error",
      "eslint-plugin-regexp/prefer-predefined-assertion": "error",
      "eslint-plugin-regexp/prefer-question-quantifier": "error",
      "eslint-plugin-regexp/prefer-range": "error",
      "eslint-plugin-regexp/prefer-set-operation": "error",
      "eslint-plugin-regexp/prefer-star-quantifier": "error",
      "eslint-plugin-regexp/prefer-unicode-codepoint-escapes": "error",
      "eslint-plugin-regexp/prefer-w": "error",
      "eslint-plugin-regexp/simplify-set-operations": "error",
      "eslint-plugin-regexp/sort-flags": "error",
      "eslint-plugin-regexp/strict": "error",
      "eslint-plugin-regexp/use-ignore-case": "error",
      "eslint-plugin-unused-imports/no-unused-imports": "error",
      "eslint-plugin-unused-imports/no-unused-vars": [
        "error",
        {
          "args": "after-used",
          "argsIgnorePattern": "^_",
          "ignoreRestSiblings": true,
          "vars": "all",
          "varsIgnorePattern": "^_",
        },
      ],
      "import/consistent-type-specifier-style": [
        "error",
        "top-level",
      ],
      "import/first": "error",
      "import/no-duplicates": "error",
      "import/no-mutable-exports": "error",
      "import/no-named-default": "error",
      "jsdoc/check-access": "warn",
      "jsdoc/check-property-names": "warn",
      "jsdoc/empty-tags": "warn",
      "jsdoc/implements-on-classes": "warn",
      "jsdoc/no-defaults": "warn",
      "jsdoc/require-param-name": "warn",
      "jsdoc/require-property": "warn",
      "jsdoc/require-property-description": "warn",
      "jsdoc/require-property-name": "warn",
      "jsdoc/require-returns-description": "warn",
      "new-cap": [
        "error",
        {
          "capIsNew": false,
          "newIsCap": true,
          "properties": true,
        },
      ],
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": [
        "error",
        "always",
      ],
      "no-const-assign": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-class-members": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": [
        "error",
        {
          "allowEmptyCatch": true,
        },
      ],
      "no-empty-pattern": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-boolean-cast": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-irregular-whitespace": "error",
      "no-iterator": "error",
      "no-labels": [
        "error",
        {
          "allowLoop": false,
          "allowSwitch": false,
        },
      ],
      "no-lone-blocks": "error",
      "no-loss-of-precision": "error",
      "no-multi-str": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-wrappers": "error",
      "no-obj-calls": "error",
      "no-proto": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": [
        "error",
        {
          "builtinGlobals": false,
        },
      ],
      "no-regex-spaces": "error",
      "no-restricted-globals": [
        "error",
        {
          "message": "Use \`globalThis\` instead.",
          "name": "global",
        },
        {
          "message": "Use \`globalThis\` instead.",
          "name": "self",
        },
      ],
      "no-self-assign": [
        "error",
        {
          "props": true,
        },
      ],
      "no-self-compare": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-unexpected-multiline": "error",
      "no-unneeded-ternary": [
        "error",
        {
          "defaultAssignment": false,
        },
      ],
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unused-expressions": [
        "error",
        {
          "allowShortCircuit": true,
          "allowTaggedTemplates": true,
          "allowTernary": true,
        },
      ],
      "no-unused-vars": [
        "error",
        {
          "args": "none",
          "caughtErrors": "none",
          "ignoreRestSiblings": true,
          "vars": "all",
        },
      ],
      "no-useless-call": "error",
      "no-useless-catch": "error",
      "no-useless-computed-key": "error",
      "no-useless-constructor": "error",
      "no-useless-rename": "error",
      "no-var": "error",
      "no-with": "error",
      "node/no-exports-assign": "error",
      "node/no-new-require": "error",
      "prefer-exponentiation-operator": "error",
      "prefer-promise-reject-errors": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-template": "error",
      "symbol-description": "error",
      "unicode-bom": [
        "error",
        "never",
      ],
      "unicorn/consistent-empty-array-spread": "error",
      "unicorn/error-message": "error",
      "unicorn/escape-case": "error",
      "unicorn/new-for-builtins": "error",
      "unicorn/no-instanceof-builtins": "error",
      "unicorn/no-new-array": "error",
      "unicorn/no-new-buffer": "error",
      "unicorn/number-literal-case": "error",
      "unicorn/prefer-dom-node-text-content": "error",
      "unicorn/prefer-includes": "error",
      "unicorn/prefer-node-protocol": "error",
      "unicorn/prefer-number-properties": "error",
      "unicorn/prefer-string-starts-ends-with": "error",
      "unicorn/prefer-type-error": "error",
      "unicorn/throw-new-error": "error",
      "use-isnan": [
        "error",
        {
          "enforceForIndexOf": true,
          "enforceForSwitchCase": true,
        },
      ],
      "valid-typeof": [
        "error",
        {
          "requireStringLiterals": true,
        },
      ],
      "vars-on-top": "error",
      "yoda": [
        "error",
        "never",
      ],
    },
  },
  "warnings": [
    "unsupported rule: accessor-pairs",
    "unsupported rule, but in development: constructor-super",
    "unsupported rule: dot-notation",
    "unsupported rule: no-dupe-args",
    "unsupported rule: no-implied-eval",
    "unsupported rule, but in development: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule: no-octal-escape",
    "unsupported rule: no-restricted-properties",
    "unsupported rule: no-restricted-syntax",
    "unsupported rule: no-sequences",
    "unsupported rule, but in development: no-undef",
    "unsupported rule: no-undef-init",
    "unsupported rule: no-unmodified-loop-condition",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: no-unreachable-loop",
    "unsupported rule: no-use-before-define",
    "unsupported rule: no-useless-return",
    "unsupported rule: object-shorthand",
    "unsupported rule: one-var",
    "unsupported rule: prefer-arrow-callback",
    "unsupported rule: prefer-const",
    "unsupported rule: prefer-regex-literals",
    "unsupported rule: node/handle-callback-err",
    "unsupported rule: node/no-deprecated-api",
    "unsupported rule: node/no-path-concat",
    "unsupported rule: node/prefer-global/buffer",
    "unsupported rule: node/prefer-global/process",
    "unsupported rule: node/process-exit-as-throw",
    "unsupported rule: jsdoc/check-param-names",
    "unsupported rule: jsdoc/check-types",
    "unsupported rule: jsdoc/no-multi-asterisks",
    "unsupported rule: jsdoc/require-returns-check",
    "unsupported rule: jsdoc/require-yields-check",
    "unsupported rule: jsdoc/check-alignment",
    "unsupported rule: jsdoc/multiline-blocks",
    "unsupported rule: import/newline-after-import",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: @typescript-eslint/method-signature-style",
    "unsupported rule: @typescript-eslint/no-use-before-define",
    "unsupported rule: vitest/no-only-tests",
    "unsupported rule: vue/comment-directive",
    "unsupported rule: vue/jsx-uses-vars",
    "unsupported rule: vue/no-arrow-functions-in-watch",
    "unsupported rule: vue/no-async-in-computed-properties",
    "unsupported rule: vue/no-child-content",
    "unsupported rule: vue/no-computed-properties-in-data",
    "unsupported rule: vue/no-deprecated-data-object-declaration",
    "unsupported rule: vue/no-deprecated-delete-set",
    "unsupported rule: vue/no-deprecated-destroyed-lifecycle",
    "unsupported rule: vue/no-deprecated-dollar-listeners-api",
    "unsupported rule: vue/no-deprecated-dollar-scopedslots-api",
    "unsupported rule: vue/no-deprecated-events-api",
    "unsupported rule: vue/no-deprecated-filter",
    "unsupported rule: vue/no-deprecated-functional-template",
    "unsupported rule: vue/no-deprecated-html-element-is",
    "unsupported rule: vue/no-deprecated-inline-template",
    "unsupported rule: vue/no-deprecated-model-definition",
    "unsupported rule: vue/no-deprecated-props-default-this",
    "unsupported rule: vue/no-deprecated-router-link-tag-prop",
    "unsupported rule: vue/no-deprecated-scope-attribute",
    "unsupported rule: vue/no-deprecated-slot-attribute",
    "unsupported rule: vue/no-deprecated-slot-scope-attribute",
    "unsupported rule: vue/no-deprecated-v-bind-sync",
    "unsupported rule: vue/no-deprecated-v-is",
    "unsupported rule: vue/no-deprecated-v-on-native-modifier",
    "unsupported rule: vue/no-deprecated-v-on-number-modifiers",
    "unsupported rule: vue/no-deprecated-vue-config-keycodes",
    "unsupported rule: vue/no-dupe-v-else-if",
    "unsupported rule: vue/no-duplicate-attributes",
    "unsupported rule: vue/no-expose-after-await",
    "unsupported rule: vue/no-lifecycle-after-await",
    "unsupported rule: vue/no-mutating-props",
    "unsupported rule: vue/no-parsing-error",
    "unsupported rule: vue/no-ref-as-operand",
    "unsupported rule: vue/no-reserved-component-names",
    "unsupported rule: vue/no-reserved-keys",
    "unsupported rule: vue/no-reserved-props",
    "unsupported rule: vue/no-shared-component-data",
    "unsupported rule: vue/no-side-effects-in-computed-properties",
    "unsupported rule: vue/no-template-key",
    "unsupported rule: vue/no-textarea-mustache",
    "unsupported rule: vue/no-unused-components",
    "unsupported rule: vue/no-unused-vars",
    "unsupported rule: vue/no-use-computed-property-like-method",
    "unsupported rule: vue/no-use-v-if-with-v-for",
    "unsupported rule: vue/no-useless-template-attributes",
    "unsupported rule: vue/no-v-for-template-key-on-child",
    "unsupported rule: vue/no-v-text-v-html-on-component",
    "unsupported rule: vue/no-watch-after-await",
    "unsupported rule: vue/require-component-is",
    "unsupported rule: vue/require-prop-type-constructor",
    "unsupported rule: vue/require-render-return",
    "unsupported rule: vue/require-slots-as-functions",
    "unsupported rule: vue/require-toggle-inside-transition",
    "unsupported rule: vue/require-v-for-key",
    "unsupported rule: vue/require-valid-default-prop",
    "unsupported rule: vue/return-in-computed-property",
    "unsupported rule: vue/return-in-emits-validator",
    "unsupported rule: vue/use-v-on-exact",
    "unsupported rule: vue/valid-attribute-name",
    "unsupported rule: vue/valid-define-options",
    "unsupported rule: vue/valid-next-tick",
    "unsupported rule: vue/valid-template-root",
    "unsupported rule: vue/valid-v-bind",
    "unsupported rule: vue/valid-v-cloak",
    "unsupported rule: vue/valid-v-else-if",
    "unsupported rule: vue/valid-v-else",
    "unsupported rule: vue/valid-v-for",
    "unsupported rule: vue/valid-v-html",
    "unsupported rule: vue/valid-v-if",
    "unsupported rule: vue/valid-v-is",
    "unsupported rule: vue/valid-v-memo",
    "unsupported rule: vue/valid-v-model",
    "unsupported rule: vue/valid-v-on",
    "unsupported rule: vue/valid-v-once",
    "unsupported rule: vue/valid-v-pre",
    "unsupported rule: vue/valid-v-show",
    "unsupported rule: vue/valid-v-slot",
    "unsupported rule: vue/valid-v-text",
    "unsupported rule: vue/attribute-hyphenation",
    "unsupported rule: vue/component-definition-name-casing",
    "unsupported rule: vue/first-attribute-linebreak",
    "unsupported rule: vue/html-closing-bracket-newline",
    "unsupported rule: vue/html-closing-bracket-spacing",
    "unsupported rule: vue/html-end-tags",
    "unsupported rule: vue/html-indent",
    "unsupported rule: vue/html-quotes",
    "unsupported rule: vue/html-self-closing",
    "unsupported rule: vue/multiline-html-element-content-newline",
    "unsupported rule: vue/mustache-interpolation-spacing",
    "unsupported rule: vue/no-multi-spaces",
    "unsupported rule: vue/no-spaces-around-equal-signs-in-attribute",
    "unsupported rule: vue/no-template-shadow",
    "unsupported rule: vue/one-component-per-file",
    "unsupported rule: vue/prop-name-casing",
    "unsupported rule: vue/require-explicit-emits",
    "unsupported rule: vue/singleline-html-element-content-newline",
    "unsupported rule: vue/v-bind-style",
    "unsupported rule: vue/v-on-event-hyphenation",
    "unsupported rule: vue/v-on-style",
    "unsupported rule: vue/v-slot-style",
    "unsupported rule: vue/attributes-order",
    "unsupported rule: vue/block-order",
    "unsupported rule: vue/no-lone-template",
    "unsupported rule: vue/order-in-components",
    "unsupported rule: vue/this-in-template",
    "unsupported rule: vue/component-name-in-template-casing",
    "unsupported rule: vue/component-options-name-casing",
    "unsupported rule: vue/custom-event-name-casing",
    "unsupported rule: vue/define-macros-order",
    "unsupported rule: vue/dot-location",
    "unsupported rule: vue/dot-notation",
    "unsupported rule: vue/eqeqeq",
    "unsupported rule: vue/no-empty-pattern",
    "unsupported rule: vue/no-irregular-whitespace",
    "unsupported rule: vue/no-loss-of-precision",
    "unsupported rule: vue/no-restricted-syntax",
    "unsupported rule: vue/no-restricted-v-bind",
    "unsupported rule: vue/no-sparse-arrays",
    "unsupported rule: vue/no-unused-refs",
    "unsupported rule: vue/no-useless-v-bind",
    "unsupported rule: vue/object-shorthand",
    "unsupported rule: vue/prefer-separate-static-class",
    "unsupported rule: vue/prefer-template",
    "unsupported rule: vue/space-infix-ops",
    "unsupported rule: vue/space-unary-ops",
    "unsupported rule: vue/array-bracket-spacing",
    "unsupported rule: vue/arrow-spacing",
    "unsupported rule: vue/block-spacing",
    "unsupported rule: vue/block-tag-newline",
    "unsupported rule: vue/brace-style",
    "unsupported rule: vue/comma-dangle",
    "unsupported rule: vue/comma-spacing",
    "unsupported rule: vue/comma-style",
    "unsupported rule: vue/html-comment-content-spacing",
    "unsupported rule: vue/key-spacing",
    "unsupported rule: vue/keyword-spacing",
    "unsupported rule: vue/object-curly-spacing",
    "unsupported rule: vue/object-property-newline",
    "unsupported rule: vue/operator-linebreak",
    "unsupported rule: vue/padding-line-between-blocks",
    "unsupported rule: vue/quote-props",
    "unsupported rule: vue/space-in-parens",
    "unsupported rule: vue/template-curly-spacing",
    "special parser detected: vue-eslint-parser",
    "special parser detected: toml-eslint-parser",
    "ignore list inside overrides is not supported",
    "special parser detected: parser-plain",
  ],
}
`;

exports[`nuxt-auth merge > nuxt-auth--merge 1`] = `
{
  "config": {
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "categories": {
      "correctness": "error",
      "perf": "error",
    },
    "env": {
      "browser": true,
      "builtin": true,
      "commonjs": true,
      "es2026": true,
      "node": true,
      "shared-node-browser": true,
    },
    "globals": {
      "computed": "readonly",
      "defineEmits": "readonly",
      "defineExpose": "readonly",
      "defineProps": "readonly",
      "onMounted": "readonly",
      "onUnmounted": "readonly",
      "reactive": "readonly",
      "ref": "readonly",
      "shallowReactive": "readonly",
      "shallowRef": "readonly",
      "toRef": "readonly",
      "toRefs": "readonly",
      "watch": "readonly",
      "watchEffect": "readonly",
    },
    "ignorePatterns": [
      "**/logs",
      "**/*.log",
      "**/npm-debug.log*",
      "**/yarn-debug.log*",
      "**/yarn-error.log*",
      "**/lerna-debug.log*",
      "**/.pnpm-debug.log*",
      "**/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json",
      "**/pids",
      "**/*.pid",
      "**/*.seed",
      "**/*.pid.lock",
      "**/lib-cov",
      "**/coverage",
      "**/*.lcov",
      "**/.nyc_output",
      "**/.grunt",
      "**/bower_components",
      "**/.lock-wscript",
      "build/Release",
      "**/node_modules/",
      "**/jspm_packages/",
      "**/web_modules/",
      "**/*.tsbuildinfo",
      "**/.npm",
      "**/.eslintcache",
      "**/.stylelintcache",
      "**/.rpt2_cache/",
      "**/.rts2_cache_cjs/",
      "**/.rts2_cache_es/",
      "**/.rts2_cache_umd/",
      "**/.node_repl_history",
      "**/*.tgz",
      "**/.yarn-integrity",
      "**/.env",
      "**/.env.development.local",
      "**/.env.test.local",
      "**/.env.production.local",
      "**/.env.local",
      "**/.cache",
      "**/.parcel-cache",
      "**/.next",
      "**/out",
      "**/.nuxt",
      "**/dist",
      "**/.cache/",
      ".vuepress/dist",
      "**/.temp",
      "**/.docusaurus",
      "**/.serverless/",
      "**/.fusebox/",
      "**/.dynamodb/",
      "**/.tern-port",
      "**/.vscode-test",
      "**/.idea",
      ".yarn/cache",
      ".yarn/unplugged",
      ".yarn/build-state.yml",
      ".yarn/install-state.gz",
      "**/.pnp.*",
      "**/node_modules",
      "**/package-lock.json",
      "**/yarn.lock",
      "**/pnpm-lock.yaml",
      "**/bun.lockb",
      "**/output",
      "**/temp",
      "**/tmp",
      "**/.tmp",
      "**/.history",
      "**/.vitepress/cache",
      "**/.svelte-kit",
      "**/.vercel",
      "**/.changeset",
      "**/.output",
      "**/.vite-inspect",
      "**/.yarn",
      "**/vite.config.*.timestamp-*",
      "**/CHANGELOG*.md",
      "**/*.min.*",
      "**/LICENSE*",
      "**/__snapshots__",
      "**/auto-import?(s).d.ts",
      "**/components.d.ts",
      ".nuxt",
      "**/.nuxt/**",
      ".output",
      "**/.output/**",
      "dist",
      "**/dist/**",
      "node_modules",
      "**/node_modules/**",
      "**/public/**",
    ],
    "jsPlugins": [
      "eslint-plugin-antfu",
      "eslint-plugin-unused-imports",
      "eslint-plugin-eslint-comments",
      "eslint-plugin-command",
      "eslint-plugin-perfectionist",
      "@stylistic/eslint-plugin",
      "eslint-plugin-regexp",
    ],
    "overrides": [
      {
        "files": [
          "**/*.?([cm])ts",
          "**/*.?([cm])tsx",
          "**/*.vue",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/ban-ts-comment": [
            "error",
            {
              "ts-expect-error": "allow-with-description",
            },
          ],
          "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface",
          ],
          "@typescript-eslint/consistent-type-imports": [
            "error",
            {
              "disallowTypeAnnotations": false,
              "fixStyle": "separate-type-imports",
              "prefer": "type-imports",
            },
          ],
          "@typescript-eslint/no-duplicate-enum-values": "error",
          "@typescript-eslint/no-dynamic-delete": "off",
          "@typescript-eslint/no-empty-object-type": [
            "error",
            {
              "allowInterfaces": "always",
            },
          ],
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-extra-non-null-assertion": "error",
          "@typescript-eslint/no-extraneous-class": "off",
          "@typescript-eslint/no-import-type-side-effects": "error",
          "@typescript-eslint/no-misused-new": "error",
          "@typescript-eslint/no-namespace": "error",
          "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
          "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
          "@typescript-eslint/no-non-null-assertion": "off",
          "@typescript-eslint/no-require-imports": "error",
          "@typescript-eslint/no-this-alias": "error",
          "@typescript-eslint/no-unnecessary-type-constraint": "error",
          "@typescript-eslint/no-unsafe-declaration-merging": "error",
          "@typescript-eslint/no-unsafe-function-type": "error",
          "@typescript-eslint/no-wrapper-object-types": "error",
          "@typescript-eslint/prefer-as-const": "error",
          "@typescript-eslint/prefer-literal-enum-member": "error",
          "@typescript-eslint/prefer-namespace-keyword": "error",
          "@typescript-eslint/triple-slash-reference": "off",
          "no-class-assign": "off",
          "no-const-assign": "off",
          "no-dupe-class-members": "error",
          "no-dupe-keys": "off",
          "no-func-assign": "off",
          "no-import-assign": "off",
          "no-new-native-nonconstructor": "off",
          "no-obj-calls": "off",
          "no-redeclare": [
            "error",
            {
              "builtinGlobals": false,
            },
          ],
          "no-setter-return": "off",
          "no-this-before-super": "off",
          "no-unsafe-negation": "off",
          "no-unused-expressions": [
            "error",
            {
              "allowShortCircuit": true,
              "allowTaggedTemplates": true,
              "allowTernary": true,
            },
          ],
          "no-unused-vars": "off",
          "no-useless-constructor": "off",
          "no-with": "off",
        },
      },
      {
        "files": [
          "**/__tests__/**/*.?([cm])[jt]s?(x)",
          "**/*.spec.?([cm])[jt]s?(x)",
          "**/*.test.?([cm])[jt]s?(x)",
          "**/*.bench.?([cm])[jt]s?(x)",
          "**/*.benchmark.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "vitest",
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
          "no-unused-expressions": "off",
          "vitest/consistent-test-it": [
            "error",
            {
              "fn": "it",
              "withinDescribe": "it",
            },
          ],
          "vitest/no-identical-title": "error",
          "vitest/no-import-node-test": "error",
          "vitest/prefer-hooks-in-order": "error",
          "vitest/prefer-lowercase-title": "error",
        },
      },
      {
        "files": [
          "**/*.vue",
        ],
        "plugins": [
          "vue",
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
          "vue/no-export-in-script-setup": "error",
          "vue/no-multiple-slot-args": "warn",
          "vue/no-required-prop-with-default": "warn",
          "vue/prefer-import-from-vue": "error",
          "vue/valid-define-emits": "error",
          "vue/valid-define-props": "error",
        },
      },
      {
        "files": [
          "**/*.toml",
        ],
        "jsPlugins": [
          "eslint-plugin-toml",
        ],
        "rules": {
          "eslint-plugin-toml/array-bracket-newline": "error",
          "eslint-plugin-toml/array-bracket-spacing": "error",
          "eslint-plugin-toml/array-element-newline": "error",
          "eslint-plugin-toml/comma-style": "error",
          "eslint-plugin-toml/indent": [
            "error",
            2,
          ],
          "eslint-plugin-toml/inline-table-curly-spacing": "error",
          "eslint-plugin-toml/key-spacing": "error",
          "eslint-plugin-toml/keys-order": "error",
          "eslint-plugin-toml/no-space-dots": "error",
          "eslint-plugin-toml/no-unreadable-number-separator": "error",
          "eslint-plugin-toml/padding-line-between-pairs": "error",
          "eslint-plugin-toml/padding-line-between-tables": "error",
          "eslint-plugin-toml/precision-of-fractional-seconds": "error",
          "eslint-plugin-toml/precision-of-integer": "error",
          "eslint-plugin-toml/quoted-keys": "error",
          "eslint-plugin-toml/spaced-comment": "error",
          "eslint-plugin-toml/table-bracket-spacing": "error",
          "eslint-plugin-toml/tables-order": "error",
          "eslint-plugin-toml/vue-custom-block": "error",
        },
      },
      {
        "files": [
          "**/*.md/**/*.?([cm])[jt]s?(x)",
          "**/*.md/**/*.vue",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/consistent-type-imports": "off",
          "@typescript-eslint/explicit-function-return-type": "off",
          "@typescript-eslint/no-namespace": "off",
          "@typescript-eslint/no-require-imports": "off",
          "no-alert": "off",
          "no-console": "off",
          "no-labels": "off",
          "no-lone-blocks": "off",
          "no-redeclare": "off",
          "no-unused-expressions": "off",
          "no-unused-labels": "off",
          "no-unused-vars": "off",
          "unicode-bom": "off",
        },
      },
      {
        "files": [
          "**/scripts/**/*.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
          "no-console": "off",
        },
      },
      {
        "files": [
          "**/cli/**/*.?([cm])[jt]s?(x)",
          "**/cli.?([cm])[jt]s?(x)",
        ],
        "rules": {
          "no-console": "off",
        },
      },
      {
        "files": [
          "**/*.js",
          "**/*.cjs",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/no-require-imports": "off",
        },
      },
      {
        "files": [
          "**/*.config.?([cm])[jt]s?(x)",
          "**/*.config.*.?([cm])[jt]s?(x)",
        ],
        "plugins": [
          "typescript",
        ],
        "rules": {
          "@typescript-eslint/explicit-function-return-type": "off",
          "no-console": "off",
        },
      },
    ],
    "plugins": [
      "node",
      "jsdoc",
      "import",
      "unicorn",
    ],
    "rules": {
      "@stylistic/eslint-plugin/array-bracket-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/arrow-parens": [
        "error",
        "as-needed",
        {
          "requireForBlockBody": true,
        },
      ],
      "@stylistic/eslint-plugin/arrow-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "@stylistic/eslint-plugin/block-spacing": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/brace-style": [
        "error",
        "stroustrup",
        {
          "allowSingleLine": true,
        },
      ],
      "@stylistic/eslint-plugin/comma-dangle": [
        "error",
        "always-multiline",
      ],
      "@stylistic/eslint-plugin/comma-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/comma-style": [
        "error",
        "last",
      ],
      "@stylistic/eslint-plugin/computed-property-spacing": [
        "error",
        "never",
        {
          "enforceForClassMembers": true,
        },
      ],
      "@stylistic/eslint-plugin/dot-location": [
        "error",
        "property",
      ],
      "@stylistic/eslint-plugin/eol-last": "error",
      "@stylistic/eslint-plugin/generator-star-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/indent": [
        "error",
        2,
        {
          "ArrayExpression": 1,
          "CallExpression": {
            "arguments": 1,
          },
          "FunctionDeclaration": {
            "body": 1,
            "parameters": 1,
            "returnType": 1,
          },
          "FunctionExpression": {
            "body": 1,
            "parameters": 1,
            "returnType": 1,
          },
          "ImportDeclaration": 1,
          "MemberExpression": 1,
          "ObjectExpression": 1,
          "SwitchCase": 1,
          "VariableDeclarator": 1,
          "flatTernaryExpressions": false,
          "ignoreComments": false,
          "ignoredNodes": [
            "TSUnionType",
            "TSIntersectionType",
          ],
          "offsetTernaryExpressions": true,
          "outerIIFEBody": 1,
          "tabLength": 2,
        },
      ],
      "@stylistic/eslint-plugin/indent-binary-ops": [
        "error",
        2,
      ],
      "@stylistic/eslint-plugin/jsx-closing-bracket-location": "error",
      "@stylistic/eslint-plugin/jsx-closing-tag-location": "error",
      "@stylistic/eslint-plugin/jsx-curly-brace-presence": [
        "error",
        {
          "propElementValues": "always",
        },
      ],
      "@stylistic/eslint-plugin/jsx-curly-newline": "error",
      "@stylistic/eslint-plugin/jsx-curly-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/jsx-equals-spacing": "error",
      "@stylistic/eslint-plugin/jsx-first-prop-new-line": "error",
      "@stylistic/eslint-plugin/jsx-function-call-newline": [
        "error",
        "multiline",
      ],
      "@stylistic/eslint-plugin/jsx-indent-props": [
        "error",
        2,
      ],
      "@stylistic/eslint-plugin/jsx-max-props-per-line": [
        "error",
        {
          "maximum": 1,
          "when": "multiline",
        },
      ],
      "@stylistic/eslint-plugin/jsx-one-expression-per-line": [
        "error",
        {
          "allow": "single-child",
        },
      ],
      "@stylistic/eslint-plugin/jsx-quotes": "error",
      "@stylistic/eslint-plugin/jsx-tag-spacing": [
        "error",
        {
          "afterOpening": "never",
          "beforeClosing": "never",
          "beforeSelfClosing": "always",
          "closingSlash": "never",
        },
      ],
      "@stylistic/eslint-plugin/jsx-wrap-multilines": [
        "error",
        {
          "arrow": "parens-new-line",
          "assignment": "parens-new-line",
          "condition": "parens-new-line",
          "declaration": "parens-new-line",
          "logical": "parens-new-line",
          "prop": "parens-new-line",
          "propertyValue": "parens-new-line",
          "return": "parens-new-line",
        },
      ],
      "@stylistic/eslint-plugin/key-spacing": [
        "error",
        {
          "afterColon": true,
          "beforeColon": false,
        },
      ],
      "@stylistic/eslint-plugin/keyword-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "@stylistic/eslint-plugin/lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true,
        },
      ],
      "@stylistic/eslint-plugin/max-statements-per-line": [
        "error",
        {
          "max": 1,
        },
      ],
      "@stylistic/eslint-plugin/member-delimiter-style": [
        "error",
        {
          "multiline": {
            "delimiter": "none",
            "requireLast": false,
          },
          "multilineDetection": "brackets",
          "overrides": {
            "interface": {
              "multiline": {
                "delimiter": "none",
                "requireLast": false,
              },
            },
          },
          "singleline": {
            "delimiter": "comma",
          },
        },
      ],
      "@stylistic/eslint-plugin/multiline-ternary": [
        "error",
        "always-multiline",
      ],
      "@stylistic/eslint-plugin/new-parens": "error",
      "@stylistic/eslint-plugin/no-extra-parens": [
        "error",
        "functions",
      ],
      "@stylistic/eslint-plugin/no-floating-decimal": "error",
      "@stylistic/eslint-plugin/no-mixed-operators": [
        "error",
        {
          "allowSamePrecedence": true,
          "groups": [
            [
              "==",
              "!=",
              "===",
              "!==",
              ">",
              ">=",
              "<",
              "<=",
            ],
            [
              "&&",
              "||",
            ],
            [
              "in",
              "instanceof",
            ],
          ],
        },
      ],
      "@stylistic/eslint-plugin/no-mixed-spaces-and-tabs": "error",
      "@stylistic/eslint-plugin/no-multi-spaces": "error",
      "@stylistic/eslint-plugin/no-multiple-empty-lines": [
        "error",
        {
          "max": 1,
          "maxBOF": 0,
          "maxEOF": 0,
        },
      ],
      "@stylistic/eslint-plugin/no-tabs": "error",
      "@stylistic/eslint-plugin/no-trailing-spaces": "error",
      "@stylistic/eslint-plugin/no-whitespace-before-property": "error",
      "@stylistic/eslint-plugin/object-curly-spacing": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/operator-linebreak": [
        "error",
        "before",
      ],
      "@stylistic/eslint-plugin/padded-blocks": [
        "error",
        {
          "blocks": "never",
          "classes": "never",
          "switches": "never",
        },
      ],
      "@stylistic/eslint-plugin/quote-props": [
        "error",
        "consistent-as-needed",
      ],
      "@stylistic/eslint-plugin/quotes": [
        "error",
        "single",
        {
          "allowTemplateLiterals": "always",
          "avoidEscape": false,
        },
      ],
      "@stylistic/eslint-plugin/rest-spread-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/semi": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/semi-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "@stylistic/eslint-plugin/space-before-blocks": [
        "error",
        "always",
      ],
      "@stylistic/eslint-plugin/space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "asyncArrow": "always",
          "named": "never",
        },
      ],
      "@stylistic/eslint-plugin/space-in-parens": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/space-infix-ops": "error",
      "@stylistic/eslint-plugin/space-unary-ops": [
        "error",
        {
          "nonwords": false,
          "words": true,
        },
      ],
      "@stylistic/eslint-plugin/spaced-comment": [
        "error",
        "always",
        {
          "block": {
            "balanced": true,
            "exceptions": [
              "*",
            ],
            "markers": [
              "!",
            ],
          },
          "line": {
            "exceptions": [
              "/",
              "#",
            ],
            "markers": [
              "/",
            ],
          },
        },
      ],
      "@stylistic/eslint-plugin/template-curly-spacing": "error",
      "@stylistic/eslint-plugin/template-tag-spacing": [
        "error",
        "never",
      ],
      "@stylistic/eslint-plugin/type-annotation-spacing": [
        "error",
        {},
      ],
      "@stylistic/eslint-plugin/type-generic-spacing": "error",
      "@stylistic/eslint-plugin/type-named-tuple-spacing": "error",
      "@stylistic/eslint-plugin/wrap-iife": [
        "error",
        "any",
        {
          "functionPrototypeMethods": true,
        },
      ],
      "@stylistic/eslint-plugin/yield-star-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "array-callback-return": "error",
      "block-scoped-var": "error",
      "curly": [
        "error",
        "all",
      ],
      "default-case-last": "error",
      "eqeqeq": [
        "error",
        "smart",
      ],
      "eslint-plugin-antfu/consistent-chaining": "error",
      "eslint-plugin-antfu/consistent-list-newline": "error",
      "eslint-plugin-antfu/curly": "error",
      "eslint-plugin-antfu/if-newline": "error",
      "eslint-plugin-antfu/import-dedupe": "error",
      "eslint-plugin-antfu/no-import-dist": "error",
      "eslint-plugin-antfu/no-import-node-modules-by-path": "error",
      "eslint-plugin-antfu/no-top-level-await": "error",
      "eslint-plugin-antfu/top-level-function": "error",
      "eslint-plugin-command/command": "error",
      "eslint-plugin-eslint-comments/no-aggregating-enable": "error",
      "eslint-plugin-eslint-comments/no-duplicate-disable": "error",
      "eslint-plugin-eslint-comments/no-unlimited-disable": "error",
      "eslint-plugin-eslint-comments/no-unused-enable": "error",
      "eslint-plugin-perfectionist/sort-exports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-imports": [
        "error",
        {
          "groups": [
            "type",
            [
              "parent-type",
              "sibling-type",
              "index-type",
              "internal-type",
            ],
            "builtin",
            "external",
            "internal",
            [
              "parent",
              "sibling",
              "index",
            ],
            "side-effect",
            "object",
            "unknown",
          ],
          "newlinesBetween": "ignore",
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-named-exports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-perfectionist/sort-named-imports": [
        "error",
        {
          "order": "asc",
          "type": "natural",
        },
      ],
      "eslint-plugin-regexp/confusing-quantifier": "warn",
      "eslint-plugin-regexp/control-character-escape": "error",
      "eslint-plugin-regexp/match-any": "error",
      "eslint-plugin-regexp/negation": "error",
      "eslint-plugin-regexp/no-contradiction-with-assertion": "error",
      "eslint-plugin-regexp/no-dupe-characters-character-class": "error",
      "eslint-plugin-regexp/no-dupe-disjunctions": "error",
      "eslint-plugin-regexp/no-empty-alternative": "warn",
      "eslint-plugin-regexp/no-empty-capturing-group": "error",
      "eslint-plugin-regexp/no-empty-character-class": "error",
      "eslint-plugin-regexp/no-empty-group": "error",
      "eslint-plugin-regexp/no-empty-lookarounds-assertion": "error",
      "eslint-plugin-regexp/no-empty-string-literal": "error",
      "eslint-plugin-regexp/no-escape-backspace": "error",
      "eslint-plugin-regexp/no-extra-lookaround-assertions": "error",
      "eslint-plugin-regexp/no-invalid-regexp": "error",
      "eslint-plugin-regexp/no-invisible-character": "error",
      "eslint-plugin-regexp/no-lazy-ends": "warn",
      "eslint-plugin-regexp/no-legacy-features": "error",
      "eslint-plugin-regexp/no-misleading-capturing-group": "error",
      "eslint-plugin-regexp/no-misleading-unicode-character": "error",
      "eslint-plugin-regexp/no-missing-g-flag": "error",
      "eslint-plugin-regexp/no-non-standard-flag": "error",
      "eslint-plugin-regexp/no-obscure-range": "error",
      "eslint-plugin-regexp/no-optional-assertion": "error",
      "eslint-plugin-regexp/no-potentially-useless-backreference": "warn",
      "eslint-plugin-regexp/no-super-linear-backtracking": "error",
      "eslint-plugin-regexp/no-trivially-nested-assertion": "error",
      "eslint-plugin-regexp/no-trivially-nested-quantifier": "error",
      "eslint-plugin-regexp/no-unused-capturing-group": "error",
      "eslint-plugin-regexp/no-useless-assertions": "error",
      "eslint-plugin-regexp/no-useless-backreference": "error",
      "eslint-plugin-regexp/no-useless-character-class": "error",
      "eslint-plugin-regexp/no-useless-dollar-replacements": "error",
      "eslint-plugin-regexp/no-useless-escape": "error",
      "eslint-plugin-regexp/no-useless-flag": "warn",
      "eslint-plugin-regexp/no-useless-lazy": "error",
      "eslint-plugin-regexp/no-useless-non-capturing-group": "error",
      "eslint-plugin-regexp/no-useless-quantifier": "error",
      "eslint-plugin-regexp/no-useless-range": "error",
      "eslint-plugin-regexp/no-useless-set-operand": "error",
      "eslint-plugin-regexp/no-useless-string-literal": "error",
      "eslint-plugin-regexp/no-useless-two-nums-quantifier": "error",
      "eslint-plugin-regexp/no-zero-quantifier": "error",
      "eslint-plugin-regexp/optimal-lookaround-quantifier": "warn",
      "eslint-plugin-regexp/optimal-quantifier-concatenation": "error",
      "eslint-plugin-regexp/prefer-character-class": "error",
      "eslint-plugin-regexp/prefer-d": "error",
      "eslint-plugin-regexp/prefer-plus-quantifier": "error",
      "eslint-plugin-regexp/prefer-predefined-assertion": "error",
      "eslint-plugin-regexp/prefer-question-quantifier": "error",
      "eslint-plugin-regexp/prefer-range": "error",
      "eslint-plugin-regexp/prefer-set-operation": "error",
      "eslint-plugin-regexp/prefer-star-quantifier": "error",
      "eslint-plugin-regexp/prefer-unicode-codepoint-escapes": "error",
      "eslint-plugin-regexp/prefer-w": "error",
      "eslint-plugin-regexp/simplify-set-operations": "error",
      "eslint-plugin-regexp/sort-flags": "error",
      "eslint-plugin-regexp/strict": "error",
      "eslint-plugin-regexp/use-ignore-case": "error",
      "eslint-plugin-unused-imports/no-unused-imports": "error",
      "eslint-plugin-unused-imports/no-unused-vars": [
        "error",
        {
          "args": "after-used",
          "argsIgnorePattern": "^_",
          "ignoreRestSiblings": true,
          "vars": "all",
          "varsIgnorePattern": "^_",
        },
      ],
      "import/consistent-type-specifier-style": [
        "error",
        "top-level",
      ],
      "import/first": "error",
      "import/no-duplicates": "error",
      "import/no-mutable-exports": "error",
      "import/no-named-default": "error",
      "jsdoc/check-access": "warn",
      "jsdoc/check-property-names": "warn",
      "jsdoc/empty-tags": "warn",
      "jsdoc/implements-on-classes": "warn",
      "jsdoc/no-defaults": "warn",
      "jsdoc/require-param-name": "warn",
      "jsdoc/require-property": "warn",
      "jsdoc/require-property-description": "warn",
      "jsdoc/require-property-name": "warn",
      "jsdoc/require-returns-description": "warn",
      "new-cap": [
        "error",
        {
          "capIsNew": false,
          "newIsCap": true,
          "properties": true,
        },
      ],
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-case-declarations": "error",
      "no-cond-assign": [
        "error",
        "always",
      ],
      "no-console": [
        "error",
        {
          "allow": [
            "warn",
            "error",
          ],
        },
      ],
      "no-empty": [
        "error",
        {
          "allowEmptyCatch": true,
        },
      ],
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-fallthrough": "error",
      "no-iterator": "error",
      "no-labels": [
        "error",
        {
          "allowLoop": false,
          "allowSwitch": false,
        },
      ],
      "no-lone-blocks": "error",
      "no-multi-str": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-proto": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": [
        "error",
        {
          "builtinGlobals": false,
        },
      ],
      "no-regex-spaces": "error",
      "no-restricted-globals": [
        "error",
        {
          "message": "Use \`globalThis\` instead.",
          "name": "global",
        },
        {
          "message": "Use \`globalThis\` instead.",
          "name": "self",
        },
      ],
      "no-self-assign": [
        "error",
        {
          "props": true,
        },
      ],
      "no-self-compare": "error",
      "no-template-curly-in-string": "error",
      "no-throw-literal": "error",
      "no-unexpected-multiline": "error",
      "no-unneeded-ternary": [
        "error",
        {
          "defaultAssignment": false,
        },
      ],
      "no-unused-expressions": [
        "error",
        {
          "allowShortCircuit": true,
          "allowTaggedTemplates": true,
          "allowTernary": true,
        },
      ],
      "no-unused-vars": [
        "error",
        {
          "args": "none",
          "caughtErrors": "none",
          "ignoreRestSiblings": true,
          "vars": "all",
        },
      ],
      "no-useless-computed-key": "error",
      "no-useless-constructor": "error",
      "no-var": "error",
      "node/no-exports-assign": "error",
      "node/no-new-require": "error",
      "prefer-exponentiation-operator": "error",
      "prefer-promise-reject-errors": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-template": "error",
      "symbol-description": "error",
      "unicode-bom": [
        "error",
        "never",
      ],
      "unicorn/consistent-empty-array-spread": "error",
      "unicorn/error-message": "error",
      "unicorn/escape-case": "error",
      "unicorn/new-for-builtins": "error",
      "unicorn/no-instanceof-builtins": "error",
      "unicorn/no-new-buffer": "error",
      "unicorn/number-literal-case": "error",
      "unicorn/prefer-dom-node-text-content": "error",
      "unicorn/prefer-includes": "error",
      "unicorn/prefer-node-protocol": "error",
      "unicorn/prefer-number-properties": "error",
      "unicorn/prefer-type-error": "error",
      "unicorn/throw-new-error": "error",
      "use-isnan": [
        "error",
        {
          "enforceForIndexOf": true,
          "enforceForSwitchCase": true,
        },
      ],
      "valid-typeof": [
        "error",
        {
          "requireStringLiterals": true,
        },
      ],
      "vars-on-top": "error",
      "yoda": [
        "error",
        "never",
      ],
    },
  },
  "warnings": [
    "unsupported rule: accessor-pairs",
    "unsupported rule, but in development: constructor-super",
    "unsupported rule: dot-notation",
    "unsupported rule: no-dupe-args",
    "unsupported rule: no-implied-eval",
    "unsupported rule, but in development: no-misleading-character-class",
    "unsupported rule: no-octal",
    "unsupported rule: no-octal-escape",
    "unsupported rule: no-restricted-properties",
    "unsupported rule: no-restricted-syntax",
    "unsupported rule: no-sequences",
    "unsupported rule, but in development: no-undef",
    "unsupported rule: no-undef-init",
    "unsupported rule: no-unmodified-loop-condition",
    "unsupported rule, but in development: no-unreachable",
    "unsupported rule: no-unreachable-loop",
    "unsupported rule: no-use-before-define",
    "unsupported rule: no-useless-return",
    "unsupported rule: object-shorthand",
    "unsupported rule: one-var",
    "unsupported rule: prefer-arrow-callback",
    "unsupported rule: prefer-const",
    "unsupported rule: prefer-regex-literals",
    "unsupported rule: node/handle-callback-err",
    "unsupported rule: node/no-deprecated-api",
    "unsupported rule: node/no-path-concat",
    "unsupported rule: node/prefer-global/buffer",
    "unsupported rule: node/prefer-global/process",
    "unsupported rule: node/process-exit-as-throw",
    "unsupported rule: jsdoc/check-param-names",
    "unsupported rule: jsdoc/check-types",
    "unsupported rule: jsdoc/no-multi-asterisks",
    "unsupported rule: jsdoc/require-returns-check",
    "unsupported rule: jsdoc/require-yields-check",
    "unsupported rule: jsdoc/check-alignment",
    "unsupported rule: jsdoc/multiline-blocks",
    "unsupported rule: import/newline-after-import",
    "unsupported rule, but in development: getter-return",
    "unsupported rule: @typescript-eslint/method-signature-style",
    "unsupported rule: @typescript-eslint/no-use-before-define",
    "unsupported rule: vitest/no-only-tests",
    "unsupported rule: vue/comment-directive",
    "unsupported rule: vue/jsx-uses-vars",
    "unsupported rule: vue/no-arrow-functions-in-watch",
    "unsupported rule: vue/no-async-in-computed-properties",
    "unsupported rule: vue/no-child-content",
    "unsupported rule: vue/no-computed-properties-in-data",
    "unsupported rule: vue/no-deprecated-data-object-declaration",
    "unsupported rule: vue/no-deprecated-delete-set",
    "unsupported rule: vue/no-deprecated-destroyed-lifecycle",
    "unsupported rule: vue/no-deprecated-dollar-listeners-api",
    "unsupported rule: vue/no-deprecated-dollar-scopedslots-api",
    "unsupported rule: vue/no-deprecated-events-api",
    "unsupported rule: vue/no-deprecated-filter",
    "unsupported rule: vue/no-deprecated-functional-template",
    "unsupported rule: vue/no-deprecated-html-element-is",
    "unsupported rule: vue/no-deprecated-inline-template",
    "unsupported rule: vue/no-deprecated-model-definition",
    "unsupported rule: vue/no-deprecated-props-default-this",
    "unsupported rule: vue/no-deprecated-router-link-tag-prop",
    "unsupported rule: vue/no-deprecated-scope-attribute",
    "unsupported rule: vue/no-deprecated-slot-attribute",
    "unsupported rule: vue/no-deprecated-slot-scope-attribute",
    "unsupported rule: vue/no-deprecated-v-bind-sync",
    "unsupported rule: vue/no-deprecated-v-is",
    "unsupported rule: vue/no-deprecated-v-on-native-modifier",
    "unsupported rule: vue/no-deprecated-v-on-number-modifiers",
    "unsupported rule: vue/no-deprecated-vue-config-keycodes",
    "unsupported rule: vue/no-dupe-v-else-if",
    "unsupported rule: vue/no-duplicate-attributes",
    "unsupported rule: vue/no-expose-after-await",
    "unsupported rule: vue/no-lifecycle-after-await",
    "unsupported rule: vue/no-mutating-props",
    "unsupported rule: vue/no-parsing-error",
    "unsupported rule: vue/no-ref-as-operand",
    "unsupported rule: vue/no-reserved-component-names",
    "unsupported rule: vue/no-reserved-keys",
    "unsupported rule: vue/no-reserved-props",
    "unsupported rule: vue/no-shared-component-data",
    "unsupported rule: vue/no-side-effects-in-computed-properties",
    "unsupported rule: vue/no-template-key",
    "unsupported rule: vue/no-textarea-mustache",
    "unsupported rule: vue/no-unused-components",
    "unsupported rule: vue/no-unused-vars",
    "unsupported rule: vue/no-use-computed-property-like-method",
    "unsupported rule: vue/no-use-v-if-with-v-for",
    "unsupported rule: vue/no-useless-template-attributes",
    "unsupported rule: vue/no-v-for-template-key-on-child",
    "unsupported rule: vue/no-v-text-v-html-on-component",
    "unsupported rule: vue/no-watch-after-await",
    "unsupported rule: vue/require-component-is",
    "unsupported rule: vue/require-prop-type-constructor",
    "unsupported rule: vue/require-render-return",
    "unsupported rule: vue/require-slots-as-functions",
    "unsupported rule: vue/require-toggle-inside-transition",
    "unsupported rule: vue/require-v-for-key",
    "unsupported rule: vue/require-valid-default-prop",
    "unsupported rule: vue/return-in-computed-property",
    "unsupported rule: vue/return-in-emits-validator",
    "unsupported rule: vue/use-v-on-exact",
    "unsupported rule: vue/valid-attribute-name",
    "unsupported rule: vue/valid-define-options",
    "unsupported rule: vue/valid-next-tick",
    "unsupported rule: vue/valid-template-root",
    "unsupported rule: vue/valid-v-bind",
    "unsupported rule: vue/valid-v-cloak",
    "unsupported rule: vue/valid-v-else-if",
    "unsupported rule: vue/valid-v-else",
    "unsupported rule: vue/valid-v-for",
    "unsupported rule: vue/valid-v-html",
    "unsupported rule: vue/valid-v-if",
    "unsupported rule: vue/valid-v-is",
    "unsupported rule: vue/valid-v-memo",
    "unsupported rule: vue/valid-v-model",
    "unsupported rule: vue/valid-v-on",
    "unsupported rule: vue/valid-v-once",
    "unsupported rule: vue/valid-v-pre",
    "unsupported rule: vue/valid-v-show",
    "unsupported rule: vue/valid-v-slot",
    "unsupported rule: vue/valid-v-text",
    "unsupported rule: vue/attribute-hyphenation",
    "unsupported rule: vue/component-definition-name-casing",
    "unsupported rule: vue/first-attribute-linebreak",
    "unsupported rule: vue/html-closing-bracket-newline",
    "unsupported rule: vue/html-closing-bracket-spacing",
    "unsupported rule: vue/html-end-tags",
    "unsupported rule: vue/html-indent",
    "unsupported rule: vue/html-quotes",
    "unsupported rule: vue/html-self-closing",
    "unsupported rule: vue/multiline-html-element-content-newline",
    "unsupported rule: vue/mustache-interpolation-spacing",
    "unsupported rule: vue/no-multi-spaces",
    "unsupported rule: vue/no-spaces-around-equal-signs-in-attribute",
    "unsupported rule: vue/no-template-shadow",
    "unsupported rule: vue/one-component-per-file",
    "unsupported rule: vue/prop-name-casing",
    "unsupported rule: vue/require-explicit-emits",
    "unsupported rule: vue/singleline-html-element-content-newline",
    "unsupported rule: vue/v-bind-style",
    "unsupported rule: vue/v-on-event-hyphenation",
    "unsupported rule: vue/v-on-style",
    "unsupported rule: vue/v-slot-style",
    "unsupported rule: vue/attributes-order",
    "unsupported rule: vue/block-order",
    "unsupported rule: vue/no-lone-template",
    "unsupported rule: vue/order-in-components",
    "unsupported rule: vue/this-in-template",
    "unsupported rule: vue/component-name-in-template-casing",
    "unsupported rule: vue/component-options-name-casing",
    "unsupported rule: vue/custom-event-name-casing",
    "unsupported rule: vue/define-macros-order",
    "unsupported rule: vue/dot-location",
    "unsupported rule: vue/dot-notation",
    "unsupported rule: vue/eqeqeq",
    "unsupported rule: vue/no-empty-pattern",
    "unsupported rule: vue/no-irregular-whitespace",
    "unsupported rule: vue/no-loss-of-precision",
    "unsupported rule: vue/no-restricted-syntax",
    "unsupported rule: vue/no-restricted-v-bind",
    "unsupported rule: vue/no-sparse-arrays",
    "unsupported rule: vue/no-unused-refs",
    "unsupported rule: vue/no-useless-v-bind",
    "unsupported rule: vue/object-shorthand",
    "unsupported rule: vue/prefer-separate-static-class",
    "unsupported rule: vue/prefer-template",
    "unsupported rule: vue/space-infix-ops",
    "unsupported rule: vue/space-unary-ops",
    "unsupported rule: vue/array-bracket-spacing",
    "unsupported rule: vue/arrow-spacing",
    "unsupported rule: vue/block-spacing",
    "unsupported rule: vue/block-tag-newline",
    "unsupported rule: vue/brace-style",
    "unsupported rule: vue/comma-dangle",
    "unsupported rule: vue/comma-spacing",
    "unsupported rule: vue/comma-style",
    "unsupported rule: vue/html-comment-content-spacing",
    "unsupported rule: vue/key-spacing",
    "unsupported rule: vue/keyword-spacing",
    "unsupported rule: vue/object-curly-spacing",
    "unsupported rule: vue/object-property-newline",
    "unsupported rule: vue/operator-linebreak",
    "unsupported rule: vue/padding-line-between-blocks",
    "unsupported rule: vue/quote-props",
    "unsupported rule: vue/space-in-parens",
    "unsupported rule: vue/template-curly-spacing",
    "special parser detected: vue-eslint-parser",
    "special parser detected: toml-eslint-parser",
    "ignore list inside overrides is not supported",
    "special parser detected: parser-plain",
  ],
}
`;
